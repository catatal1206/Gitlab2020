!function(e,r){for(var t in r)e[t]=r[t]}(exports,function(e){var r={};function t(o){if(r[o])return r[o].exports;var s=r[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var s in e)t.d(o,s,function(r){return e[r]}.bind(null,s));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=12)}([function(e,r){e.exports=require("stream")},function(e,r){e.exports=require("zlib")},function(e,r){e.exports=require("vscode")},function(e,r){e.exports=require("url")},function(e,r){e.exports=require("https")},function(e,r){e.exports=require("http")},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.getOctokit=r.getSession=void 0;const o=t(2),s=t(4),n=t(28),i=t(18),a=t(3);const c=["repo","workflow"];async function u(){const e=await o.authentication.getSessions("github",c);return e.length?await e[0]:await o.authentication.login("github",c)}let l;r.getSession=u,r.getOctokit=function(){return l||(l=u().then(async e=>{const r=await e.getAccessToken(),t=function(e=process.env.HTTPS_PROXY){if(!e)return s.globalAgent;try{const{hostname:r,port:t,username:n,password:c}=new a.URL(e),u=n&&c&&`${n}:${c}`;return i.httpsOverHttp({proxy:{host:r,port:t,proxyAuth:u}})}catch(e){return o.window.showErrorMessage(`HTTPS_PROXY environment variable ignored: ${e.message}`),s.globalAgent}}();return new n.Octokit({request:{agent:t},userAgent:"GitHub VSCode",auth:`token ${r}`})}).then(null,async e=>{throw l=void 0,e})),l}},function(e,r){e.exports=require("path")},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.publishRepository=void 0;const o=t(2),s=t(25),n=t(7),i=t(9),a=t(6),c=s.loadMessageBundle(t(7).join(__dirname,"publish.ts"));function u(e){return Promise.race([new Promise(r=>e.onDidAccept(()=>e.selectedItems.length>0&&r(e.selectedItems[0]))),new Promise(r=>e.onDidHide(()=>r(void 0)))])}r.publishRepository=async function(e,r){var t;if(!(null===(t=o.workspace.workspaceFolders)||void 0===t?void 0:t.length))return;let s;if(1===o.workspace.workspaceFolders.length)s=o.workspace.workspaceFolders[0];else{const e=o.workspace.workspaceFolders.map(e=>({label:e.name,folder:e})),r=c(0,null),t=await o.window.showQuickPick(e,{placeHolder:r});if(!t)return;s=t.folder}let l=o.window.createQuickPick();l.ignoreFocusOut=!0,l.placeholder="Repository Name",l.value=s.name,l.show(),l.busy=!0;const p=await a.getOctokit(),d=(await p.users.getAuthenticated({})).data.login;let m;l.busy=!1;const g=async()=>{const e=function(e){return e.trim().replace(/[^a-z0-9_.]/gi,"-")}(l.value);l.items=e?[{label:"$(repo) Publish to GitHub private repository",description:`$(github) ${d}/${e}`,alwaysShow:!0,repo:e}]:[]};for(g();;){const e=l.onDidChangeValue(g),r=await u(l);if(e.dispose(),m=null===r||void 0===r?void 0:r.repo)try{l.busy=!0,await p.repos.get({owner:d,repo:m}),l.items=[{label:"$(error) GitHub repository already exists",description:`$(github) ${d}/${m}`,alwaysShow:!0}]}catch(e){break}finally{l.busy=!1}}if(l.dispose(),!m)return;(l=o.window.createQuickPick()).placeholder=c(1,null),l.canSelectMany=!0,l.show();try{l.busy=!0;const e=s.uri.fsPath,r=n.join(e),t=await i.promises.readdir(r);l.items=t.map(e=>({label:e})),l.selectedItems=l.items,l.busy=!1;const o=await Promise.race([new Promise(e=>l.onDidAccept(()=>e(l.selectedItems))),new Promise(e=>l.onDidHide(()=>e(void 0)))]);if(!o)return;const a=new Set(t);o.forEach(e=>a.delete(e.label));const c=[...a].map(e=>`/${e}`).join("\n");await i.promises.writeFile(n.join(e,".gitignore"),c,"utf8")}finally{l.dispose()}const h=await o.window.withProgress({location:o.ProgressLocation.Notification,cancellable:!1,title:"Publish to GitHub"},async t=>{t.report({message:"Publishing to GitHub private repository",increment:25});const o=(await p.repos.createForAuthenticatedUser({name:m,private:!0})).data;if(t.report({message:"Creating first commit",increment:25}),!r){if(!(r=await e.init(s.uri)||void 0))return;await r.commit("first commit",{all:!0})}return t.report({message:"Uploading files",increment:25}),await r.addRemote("origin",o.clone_url),await r.push("origin","master",!0),o});if(!h)return;"Open In GitHub"===await o.window.showInformationMessage(`Successfully published the '${d}/${m}' repository on GitHub.`,"Open In GitHub")&&o.commands.executeCommand("vscode.open",o.Uri.parse(h.html_url))}},function(e,r){e.exports=require("fs")},function(e,r,t){var o=t(14),s=t(15),n=t(16),i=Function.bind,a=i.bind(i);function c(e,r,t){var o=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach(function(o){var n=t?[r,o,t]:[r,o];e[o]=e.api[o]=a(s,null).apply(null,n)})}function u(){var e={registry:{}},r=o.bind(null,e);return c(r,e),r}var l=!1;function p(){return l||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),l=!0),u()}p.Singular=function(){var e={registry:{}},r=o.bind(null,e,"h");return c(r,e,"h"),r}.bind(),p.Collection=u.bind(),e.exports=p,e.exports.Hook=p,e.exports.Singular=p.Singular,e.exports.Collection=p.Collection},function(e,r,t){var o=t(17);function s(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function n(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}e.exports=o(s),e.exports.strict=o(n),s.proto=s(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return s(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.activate=void 0;const o=t(2),s=t(13),n=t(26),i=t(27);r.activate=async function(e){const r=o.extensions.getExtension("vscode.git").exports.getAPI(1);e.subscriptions.push(...n.registerCommands(r)),e.subscriptions.push(r.registerRemoteSourceProvider(new s.GithubRemoteSourceProvider(r))),e.subscriptions.push(new i.GithubCredentialProviderManager(r))}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.GithubRemoteSourceProvider=void 0;const o=t(6),s=t(8);function n(e){return{name:`$(github) ${e.full_name}`,description:e.description||void 0,url:e.clone_url}}r.GithubRemoteSourceProvider=class{constructor(e){this.gitAPI=e,this.name="GitHub",this.icon="github",this.supportsQuery=!0,this.userReposCache=[]}async getRemoteSources(e){const r=await o.getOctokit(),[t,s]=await Promise.all([this.getUserRemoteSources(r,e),this.getQueryRemoteSources(r,e)]),n=new Set(t.map(e=>e.name));return[...t,...s.filter(e=>!n.has(e.name))]}async getUserRemoteSources(e,r){if(!r){const r=(await e.users.getAuthenticated({})).data.login,t=await e.repos.listForUser({username:r,sort:"updated",per_page:100});this.userReposCache=t.data.map(n)}return this.userReposCache}async getQueryRemoteSources(e,r){return r?(await e.search.repos({q:r,sort:"updated"})).data.items.map(n):[]}publishRepository(e){return s.publishRepository(this.gitAPI,e)}}},function(e,r){e.exports=function e(r,t,o,s){if("function"!=typeof o)throw new Error("method for before hook must be a function");s||(s={});if(Array.isArray(t))return t.reverse().reduce(function(t,o){return e.bind(null,r,o,t,s)},o)();return Promise.resolve().then(function(){return r.registry[t]?r.registry[t].reduce(function(e,r){return r.hook.bind(null,e,s)},o)():o(s)})}},function(e,r){e.exports=function(e,r,t,o){var s=o;e.registry[t]||(e.registry[t]=[]);"before"===r&&(o=function(e,r){return Promise.resolve().then(s.bind(null,r)).then(e.bind(null,r))});"after"===r&&(o=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then(function(e){return s(t=e,r)}).then(function(){return t})});"error"===r&&(o=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch(function(e){return s(e,r)})});e.registry[t].push({hook:o,orig:s})}},function(e,r){e.exports=function(e,r,t){if(!e.registry[r])return;var o=e.registry[r].map(function(e){return e.orig}).indexOf(t);if(-1===o)return;e.registry[r].splice(o,1)}},function(e,r){e.exports=function e(r,t){if(r&&t)return e(r)(t);if("function"!=typeof r)throw new TypeError("need wrapper function");Object.keys(r).forEach(function(e){o[e]=r[e]});return o;function o(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var o=r.apply(this,e),s=e[e.length-1];return"function"==typeof o&&o!==s&&Object.keys(s).forEach(function(e){o[e]=s[e]}),o}}},function(e,r,t){e.exports=t(19)},function(e,r,t){"use strict";t(20);var o,s=t(21),n=t(5),i=t(4),a=t(22),c=(t(23),t(24));function u(e){var r=this;r.options=e||{},r.proxyOptions=r.options.proxy||{},r.maxSockets=r.options.maxSockets||n.Agent.defaultMaxSockets,r.requests=[],r.sockets=[],r.on("free",function(e,t,o,s){for(var n=p(t,o,s),i=0,a=r.requests.length;i<a;++i){var c=r.requests[i];if(c.host===n.host&&c.port===n.port)return r.requests.splice(i,1),void c.request.onSocket(e)}e.destroy(),r.removeSocket(e)})}function l(e,r){var t=this;u.prototype.createSocket.call(t,e,function(o){var n=e.request.getHeader("host"),i=d({},t.options,{socket:o,servername:n?n.replace(/:.*$/,""):e.host}),a=s.connect(0,i);t.sockets[t.sockets.indexOf(o)]=a,r(a)})}function p(e,r,t){return"string"==typeof e?{host:e,port:r,localAddress:t}:e}function d(e){for(var r=1,t=arguments.length;r<t;++r){var o=arguments[r];if("object"==typeof o)for(var s=Object.keys(o),n=0,i=s.length;n<i;++n){var a=s[n];void 0!==o[a]&&(e[a]=o[a])}}return e}r.httpOverHttp=function(e){var r=new u(e);return r.request=n.request,r},r.httpsOverHttp=function(e){var r=new u(e);return r.request=n.request,r.createSocket=l,r.defaultPort=443,r},r.httpOverHttps=function(e){var r=new u(e);return r.request=i.request,r},r.httpsOverHttps=function(e){var r=new u(e);return r.request=i.request,r.createSocket=l,r.defaultPort=443,r},c.inherits(u,a.EventEmitter),u.prototype.addRequest=function(e,r,t,o){var s=this,n=d({request:e},s.options,p(r,t,o));s.sockets.length>=this.maxSockets?s.requests.push(n):s.createSocket(n,function(r){function t(){s.emit("free",r,n)}function o(e){s.removeSocket(r),r.removeListener("free",t),r.removeListener("close",o),r.removeListener("agentRemove",o)}r.on("free",t),r.on("close",o),r.on("agentRemove",o),e.onSocket(r)})},u.prototype.createSocket=function(e,r){var t=this,s={};t.sockets.push(s);var n=d({},t.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:!1,headers:{host:e.host+":"+e.port}});e.localAddress&&(n.localAddress=e.localAddress),n.proxyAuth&&(n.headers=n.headers||{},n.headers["Proxy-Authorization"]="Basic "+new Buffer(n.proxyAuth).toString("base64")),o("making CONNECT request");var i=t.request(n);function a(n,a,c){var u;return i.removeAllListeners(),a.removeAllListeners(),200!==n.statusCode?(o("tunneling socket could not be established, statusCode=%d",n.statusCode),a.destroy(),(u=new Error("tunneling socket could not be established, statusCode="+n.statusCode)).code="ECONNRESET",e.request.emit("error",u),void t.removeSocket(s)):c.length>0?(o("got illegal response body from proxy"),a.destroy(),(u=new Error("got illegal response body from proxy")).code="ECONNRESET",e.request.emit("error",u),void t.removeSocket(s)):(o("tunneling connection has established"),t.sockets[t.sockets.indexOf(s)]=a,r(a))}i.useChunkedEncodingByDefault=!1,i.once("response",function(e){e.upgrade=!0}),i.once("upgrade",function(e,r,t){process.nextTick(function(){a(e,r,t)})}),i.once("connect",a),i.once("error",function(r){i.removeAllListeners(),o("tunneling socket could not be established, cause=%s\n",r.message,r.stack);var n=new Error("tunneling socket could not be established, cause="+r.message);n.code="ECONNRESET",e.request.emit("error",n),t.removeSocket(s)}),i.end()},u.prototype.removeSocket=function(e){var r=this.sockets.indexOf(e);if(-1!==r){this.sockets.splice(r,1);var t=this.requests.shift();t&&this.createSocket(t,function(e){t.request.onSocket(e)})}},o=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments);"string"==typeof e[0]?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:function(){},r.debug=o},function(e,r){e.exports=require("net")},function(e,r){e.exports=require("tls")},function(e,r){e.exports=require("events")},function(e,r){e.exports=require("assert")},function(e,r){e.exports=require("util")},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var o,s,n,i,a,c,u=t(7),l=t(9),p=Object.prototype.toString;function d(e){return void 0!==e}function m(e){return"[object String]"===p.call(e)}function g(e){return JSON.parse(l.readFileSync(e,"utf8"))}function h(e,r){return c&&(e="［"+e.replace(/[aouei]/g,"$&$&")+"］"),0===r.length?e:e.replace(/\{(\d+)\}/g,function(e,t){var o=t[0],s=r[o],n=e;return"string"==typeof s?n=s:"number"!=typeof s&&"boolean"!=typeof s&&void 0!==s&&null!==s||(n=String(s)),n})}function f(e){return function(r,t){for(var o=[],s=2;s<arguments.length;s++)o[s-2]=arguments[s];return function(e){return"[object Number]"===p.call(e)}(r)?r>=e.length?void console.error("Broken localize call found. Index out of bounds. Stacktrace is\n: "+new Error("").stack):h(e[r],o):m(t)?(console.warn("Message "+t+" didn't get externalized correctly."),h(t,o)):void console.error("Broken localize call found. Stacktrace is\n: "+new Error("").stack)}}function T(e,r){for(var t=[],o=2;o<arguments.length;o++)t[o-2]=arguments[o];return h(r,t)}function b(e,r){return i[e]=r,r}function w(e,r){var t,o=u.join(a.cacheRoot,e.id+"-"+e.hash+".json"),s=!1,n=!1;try{return t=JSON.parse(l.readFileSync(o,{encoding:"utf8",flag:"r"})),function(e){var r=new Date;l.utimes(e,r,r,function(){})}(o),t}catch(e){if("ENOENT"===e.code)n=!0;else{if(!(e instanceof SyntaxError))throw e;console.log("Syntax error parsing message bundle: "+e.message+"."),l.unlink(o,function(e){e&&console.error("Deleting corrupted bundle "+o+" failed.")}),s=!0}}if(!(t=function(e,r){var t=a.translationsConfig[e.id];if(t){var o=g(t).contents,s=g(u.join(r,"nls.metadata.json")),n=Object.create(null);for(var i in s){var c=s[i],l=o[e.outDir+"/"+i];if(l){for(var p=[],d=0;d<c.keys.length;d++){var h=c.keys[d],f=l[m(h)?h:h.key];void 0===f&&(f=c.messages[d]),p.push(f)}n[i]=p}else n[i]=c.messages}return n}}(e,r))||s)return t;if(n)try{l.writeFileSync(o,JSON.stringify(t),{encoding:"utf8",flag:"wx"})}catch(e){if("EEXIST"===e.code)return t;throw e}return t}function E(e){try{return function(e){var r=g(u.join(e,"nls.metadata.json")),t=Object.create(null);for(var o in r){var s=r[o];t[o]=s.messages}return t}(e)}catch(e){return void console.log("Generating default bundle from meta data failed.",e)}}function y(e,r){var t;if(!0===a.languagePackSupport&&void 0!==a.cacheRoot&&void 0!==a.languagePackId&&void 0!==a.translationsConfigFile&&void 0!==a.translationsConfig)try{t=w(e,r)}catch(e){console.log("Load or create bundle failed ",e)}if(!t){if(a.languagePackSupport)return E(r);var o=function(e){for(var r=a.language;r;){var t=u.join(e,"nls.bundle."+r+".json");if(l.existsSync(t))return t;var o=r.lastIndexOf("-");r=o>0?r.substring(0,o):void 0}if(void 0===r&&(t=u.join(e,"nls.bundle.json"),l.existsSync(t)))return t}(r);if(o)try{return g(o)}catch(e){console.log("Loading in the box message bundle failed.",e)}t=E(r)}return t}function v(e){if(!e)return T;var r=u.extname(e);if(r&&(e=e.substr(0,e.length-r.length)),a.messageFormat===o.both||a.messageFormat===o.bundle){var t=function(e){for(var r,t=u.dirname(e);r=u.join(t,"nls.metadata.header.json"),!l.existsSync(r);){var o=u.dirname(t);if(o===t){r=void 0;break}t=o}return r}(e);if(t){var s=u.dirname(t),n=i[s];if(void 0===n)try{var p=JSON.parse(l.readFileSync(t,"utf8"));try{var m=y(p,s);n=b(s,m?{header:p,nlsBundle:m}:null)}catch(e){console.error("Failed to load nls bundle",e),n=b(s,null)}}catch(e){console.error("Failed to read header file",e),n=b(s,null)}if(n){var h=e.substr(s.length+1).replace(/\\/g,"/"),w=n.nlsBundle[h];return void 0===w?(console.error("Messages for file "+e+" not found. See console for details."),function(){return"Messages not found."}):f(w)}}}if(a.messageFormat===o.both||a.messageFormat===o.file)try{var E=g(function(e){var r;if(a.cacheLanguageResolution&&r)r=r;else{if(c||!a.language)r=".nls.json";else for(var t=a.language;t;){var o=".nls."+t+".json";if(l.existsSync(e+o)){r=o;break}var s=t.lastIndexOf("-");s>0?t=t.substring(0,s):(r=".nls.json",t=null)}a.cacheLanguageResolution&&(r=r)}return e+r}(e));return Array.isArray(E)?f(E):d(E.messages)&&d(E.keys)?f(E.messages):(console.error("String bundle '"+e+"' uses an unsupported format."),function(){return"File bundle has unsupported format. See console for details"})}catch(e){"ENOENT"!==e.code&&console.error("Failed to load single file bundle",e)}return console.error("Failed to load message bundle for file "+e),function(){return"Failed to load message bundle. See console for details."}}!function(e){e.file="file",e.bundle="bundle",e.both="both"}(o=r.MessageFormat||(r.MessageFormat={})),function(e){e.standalone="standalone",e.languagePack="languagePack"}(s=r.BundleFormat||(r.BundleFormat={})),function(e){e.is=function(e){var r=e;return r&&d(r.key)&&d(r.comment)}}(n||(n={})),function(){if(a={locale:void 0,language:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:o.bundle},m(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG),r=void 0;if(e.availableLanguages){var t=e.availableLanguages["*"];m(t)&&(r=t)}if(m(e.locale)&&(a.locale=e.locale.toLowerCase()),void 0===r?a.language=a.locale:"en"!==r&&(a.language=r),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(a.languagePackSupport=e._languagePackSupport),m(e._cacheRoot)&&(a.cacheRoot=e._cacheRoot),m(e._languagePackId)&&(a.languagePackId=e._languagePackId),m(e._translationsConfigFile)){a.translationsConfigFile=e._translationsConfigFile;try{a.translationsConfig=g(a.translationsConfigFile)}catch(r){if(e._corruptedFile){var s=u.dirname(e._corruptedFile);l.exists(s,function(r){r&&l.writeFile(e._corruptedFile,"corrupted","utf8",function(e){console.error(e)})})}}}}catch(e){}c="pseudo"===a.locale,void 0,i=Object.create(null)}(),r.loadMessageBundle=v,r.config=function(e){return e&&(m(e.locale)&&(a.locale=e.locale.toLowerCase(),a.language=a.locale,void 0,i=Object.create(null)),void 0!==e.messageFormat&&(a.messageFormat=e.messageFormat),e.bundleFormat===s.standalone&&!0===a.languagePackSupport&&(a.languagePackSupport=!1)),c="pseudo"===a.locale,v}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.registerCommands=void 0;const o=t(2),s=t(8);r.registerCommands=function(e){const r=[];return r.push(o.commands.registerCommand("github.publish",async()=>{try{s.publishRepository(e)}catch(e){o.window.showErrorMessage(e.message)}})),r}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.GithubCredentialProviderManager=void 0;const o=t(2),s=t(6),n={dispose(){}};class i{async getCredentials(e){if(!/github\.com/i.test(e.authority))return;const r=await s.getSession();return{username:r.account.id,password:await r.getAccessToken()}}}r.GithubCredentialProviderManager=class{constructor(e){this.gitAPI=e,this.providerDisposable=n,this._enabled=!1,this.disposable=o.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration("github")&&this.refresh()}),this.refresh()}set enabled(e){this._enabled!==e&&(this._enabled=e,e?this.providerDisposable=this.gitAPI.registerCredentialsProvider(new i):this.providerDisposable.dispose())}refresh(){const e=o.workspace.getConfiguration("github",null).get("gitAuthentication",!0);this.enabled=!!e}dispose(){this.enabled=!1,this.disposable.dispose()}}},function(e,r,t){"use strict";function o(){try{return navigator.userAgent}catch(e){return"<environment undetectable>"}}t.r(r);var s=t(10);
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
function n(e){return!0===function(e){return null!=e&&"object"==typeof e&&!1===Array.isArray(e)}(e)&&"[object Object]"===Object.prototype.toString.call(e)}function i(e){var r,t;return!1!==n(e)&&("function"==typeof(r=e.constructor)&&(!1!==n(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf")))}function a(e,r,t){if("string"==typeof r){let[e,o]=r.split(" ");t=Object.assign(o?{method:e,url:o}:{url:e},t)}else t=Object.assign({},r);t.headers=function(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}(t.headers);const o=function e(r,t){const o=Object.assign({},r);return Object.keys(t).forEach(s=>{i(t[s])&&s in r?o[s]=e(r[s],t[s]):Object.assign(o,{[s]:t[s]})}),o}(e||{},t);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter(e=>!o.mediaType.previews.includes(e)).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map(e=>e.replace(/-preview/,"")),o}const c=/\{[^}]+\}/g;function u(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function l(e,r){return Object.keys(e).filter(e=>!r.includes(e)).reduce((r,t)=>(r[t]=e[t],r),{})}function p(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function d(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function m(e,r,t){return r="+"===e||"#"===e?p(r):d(r),t?d(t)+"="+r:r}function g(e){return void 0!==e&&null!==e}function h(e){return";"===e||"&"===e||"?"===e}function f(e){return{expand:function(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,o,s){if(o){let e="";const s=[];if(-1!==t.indexOf(o.charAt(0))&&(e=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(t){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);s.push(function(e,r,t,o){var s=e[t],n=[];if(g(s)&&""!==s)if("string"==typeof s||"number"==typeof s||"boolean"==typeof s)s=s.toString(),o&&"*"!==o&&(s=s.substring(0,parseInt(o,10))),n.push(m(r,s,h(r)?t:""));else if("*"===o)Array.isArray(s)?s.filter(g).forEach(function(e){n.push(m(r,e,h(r)?t:""))}):Object.keys(s).forEach(function(e){g(s[e])&&n.push(m(r,s[e],e))});else{const e=[];Array.isArray(s)?s.filter(g).forEach(function(t){e.push(m(r,t))}):Object.keys(s).forEach(function(t){g(s[t])&&(e.push(d(t)),e.push(m(r,s[t].toString())))}),h(r)?n.push(d(t)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===r?g(s)&&n.push(d(t)):""!==s||"&"!==r&&"?"!==r?""===s&&n.push(""):n.push(d(t)+"=");return n}(r,e,o[1],o[2]||o[3]))}),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==s.length?e:"")+s.join(n)}return s.join(",")}return p(s)})}.bind(null,e)}}function T(e){let r,t=e.method.toUpperCase(),o=(e.url||"/").replace(/:([a-z]\w+)/g,"{+$1}"),s=Object.assign({},e.headers),n=l(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const r=e.match(c);return r?r.map(u).reduce((e,r)=>e.concat(r),[]):[]}(o);o=f(o).expand(n),/^http/.test(o)||(o=e.baseUrl+o);const a=l(n,Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),e.mediaType.previews.length)){const r=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=r.concat(e.mediaType.previews).map(r=>{return`application/vnd.github.${r}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`}).join(",")}return["GET","HEAD"].includes(t)?o=function(e,r){const t=/\?/.test(e)?"&":"?",o=Object.keys(r);return 0===o.length?e:e+t+o.map(e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`).join("&")}(o,a):"data"in a?r=a.data:Object.keys(a).length?r=a:s["content-length"]=0,s["content-type"]||void 0===r||(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&void 0===r&&(r=""),Object.assign({method:t,url:o,headers:s},void 0!==r?{body:r}:null,e.request?{request:e.request}:null)}const b=function e(r,t){const o=a(r,t),s=function(e,r,t){return T(a(e,r,t))}.bind(null,o);return Object.assign(s,{DEFAULTS:o,defaults:e.bind(null,o),merge:a.bind(null,o),parse:T})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/6.0.1 ${o()}`},mediaType:{format:"",previews:[]}});var w=t(0),E=t(5),y=t(3),v=t(4),_=t(1);const k=w.Readable,P=Symbol("buffer"),S=Symbol("type");class G{constructor(){this[S]="";const e=arguments[0],r=arguments[1],t=[];let o=0;if(e){const r=e,s=Number(r.length);for(let e=0;e<s;e++){const s=r[e];let n;o+=(n=s instanceof Buffer?s:ArrayBuffer.isView(s)?Buffer.from(s.buffer,s.byteOffset,s.byteLength):s instanceof ArrayBuffer?Buffer.from(s):s instanceof G?s[P]:Buffer.from("string"==typeof s?s:String(s))).length,t.push(n)}}this[P]=Buffer.concat(t);let s=r&&void 0!==r.type&&String(r.type).toLowerCase();s&&!/[^\u0020-\u007E]/.test(s)&&(this[S]=s)}get size(){return this[P].length}get type(){return this[S]}text(){return Promise.resolve(this[P].toString())}arrayBuffer(){const e=this[P],r=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(r)}stream(){const e=new k;return e._read=function(){},e.push(this[P]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,r=arguments[0],t=arguments[1];let o,s;o=void 0===r?0:r<0?Math.max(e+r,0):Math.min(r,e),s=void 0===t?e:t<0?Math.max(e+t,0):Math.min(t,e);const n=Math.max(s-o,0),i=this[P].slice(o,o+n),a=new G([],{type:arguments[2]});return a[P]=i,a}}function O(e,r,t){Error.call(this,e),this.message=e,this.type=r,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}let R;Object.defineProperties(G.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(G.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),O.prototype=Object.create(Error.prototype),O.prototype.constructor=O,O.prototype.name="FetchError";try{R=require("encoding").convert}catch(e){}const A=Symbol("Body internals"),C=w.PassThrough;function F(e){var r=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=t.size;let s=void 0===o?0:o;var n=t.timeout;let i=void 0===n?0:n;null==e?e=null:U(e)?e=Buffer.from(e.toString()):D(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof w||(e=Buffer.from(String(e)))),this[A]={body:e,disturbed:!1,error:null},this.size=s,this.timeout=i,e instanceof w&&e.on("error",function(e){const t="AbortError"===e.name?e:new O(`Invalid response body while trying to fetch ${r.url}: ${e.message}`,"system",e);r[A].error=t})}function j(){var e=this;if(this[A].disturbed)return F.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[A].disturbed=!0,this[A].error)return F.Promise.reject(this[A].error);let r=this.body;if(null===r)return F.Promise.resolve(Buffer.alloc(0));if(D(r)&&(r=r.stream()),Buffer.isBuffer(r))return F.Promise.resolve(r);if(!(r instanceof w))return F.Promise.resolve(Buffer.alloc(0));let t=[],o=0,s=!1;return new F.Promise(function(n,i){let a;e.timeout&&(a=setTimeout(function(){s=!0,i(new O(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),r.on("error",function(r){"AbortError"===r.name?(s=!0,i(r)):i(new O(`Invalid response body while trying to fetch ${e.url}: ${r.message}`,"system",r))}),r.on("data",function(r){if(!s&&null!==r){if(e.size&&o+r.length>e.size)return s=!0,void i(new O(`content size at ${e.url} over limit: ${e.size}`,"max-size"));o+=r.length,t.push(r)}}),r.on("end",function(){if(!s){clearTimeout(a);try{n(Buffer.concat(t,o))}catch(r){i(new O(`Could not create Buffer from response body for ${e.url}: ${r.message}`,"system",r))}}})})}function U(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function D(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function L(e){let r,t,o=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return o instanceof w&&"function"!=typeof o.getBoundary&&(r=new C,t=new C,o.pipe(r),o.pipe(t),e[A].body=r,o=t),o}function q(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":U(e)?"application/x-www-form-urlencoded;charset=UTF-8":D(e)?e.type||null:Buffer.isBuffer(e)?null:"[object ArrayBuffer]"===Object.prototype.toString.call(e)?null:ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof w?null:"text/plain;charset=UTF-8"}function x(e){const r=e.body;return null===r?0:D(r)?r.size:Buffer.isBuffer(r)?r.length:r&&"function"==typeof r.getLengthSync&&(r._lengthRetrievers&&0==r._lengthRetrievers.length||r.hasKnownLength&&r.hasKnownLength())?r.getLengthSync():null}F.prototype={get body(){return this[A].body},get bodyUsed(){return this[A].disturbed},arrayBuffer(){return j.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return j.call(this).then(function(r){return Object.assign(new G([],{type:e.toLowerCase()}),{[P]:r})})},json(){var e=this;return j.call(this).then(function(r){try{return JSON.parse(r.toString())}catch(r){return F.Promise.reject(new O(`invalid json response body at ${e.url} reason: ${r.message}`,"invalid-json"))}})},text(){return j.call(this).then(function(e){return e.toString()})},buffer(){return j.call(this)},textConverted(){var e=this;return j.call(this).then(function(r){return function(e,r){if("function"!=typeof R)throw new Error("The package `encoding` must be installed to use the textConverted() function");const t=r.get("content-type");let o,s,n="utf-8";t&&(o=/charset=([^;]*)/i.exec(t));s=e.slice(0,1024).toString(),!o&&s&&(o=/<meta.+?charset=(['"])(.+?)\1/i.exec(s));!o&&s&&(o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(s))&&(o=/charset=(.*)/i.exec(o.pop()));!o&&s&&(o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(s));o&&("gb2312"!==(n=o.pop())&&"gbk"!==n||(n="gb18030"));return R(e,"UTF-8",n).toString()}(r,e.headers)})}},Object.defineProperties(F.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),F.mixIn=function(e){for(const r of Object.getOwnPropertyNames(F.prototype))if(!(r in e)){const t=Object.getOwnPropertyDescriptor(F.prototype,r);Object.defineProperty(e,r,t)}},F.Promise=global.Promise;const B=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,I=/[^\t\x20-\x7e\x80-\xff]/;function H(e){if(e=`${e}`,B.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function $(e){if(e=`${e}`,I.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function M(e,r){r=r.toLowerCase();for(const t in e)if(t.toLowerCase()===r)return t}const N=Symbol("map");class z{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[N]=Object.create(null),e instanceof z){const r=e.raw(),t=Object.keys(r);for(const e of t)for(const t of r[e])this.append(e,t)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const r=e[Symbol.iterator];if(null!=r){if("function"!=typeof r)throw new TypeError("Header pairs must be iterable");const t=[];for(const r of e){if("object"!=typeof r||"function"!=typeof r[Symbol.iterator])throw new TypeError("Each header pair must be iterable");t.push(Array.from(r))}for(const e of t){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const r of Object.keys(e)){const t=e[r];this.append(r,t)}}}}get(e){H(e=`${e}`);const r=M(this[N],e);return void 0===r?null:this[N][r].join(", ")}forEach(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,t=W(this),o=0;for(;o<t.length;){var s=t[o];const n=s[0],i=s[1];e.call(r,i,n,this),t=W(this),o++}}set(e,r){r=`${r}`,H(e=`${e}`),$(r);const t=M(this[N],e);this[N][void 0!==t?t:e]=[r]}append(e,r){r=`${r}`,H(e=`${e}`),$(r);const t=M(this[N],e);void 0!==t?this[N][t].push(r):this[N][e]=[r]}has(e){return H(e=`${e}`),void 0!==M(this[N],e)}delete(e){H(e=`${e}`);const r=M(this[N],e);void 0!==r&&delete this[N][r]}raw(){return this[N]}keys(){return V(this,"key")}values(){return V(this,"value")}[Symbol.iterator](){return V(this,"key+value")}}function W(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[N]).sort().map("key"===r?function(e){return e.toLowerCase()}:"value"===r?function(r){return e[N][r].join(", ")}:function(r){return[r.toLowerCase(),e[N][r].join(", ")]})}z.prototype.entries=z.prototype[Symbol.iterator],Object.defineProperty(z.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(z.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const K=Symbol("internal");function V(e,r){const t=Object.create(J);return t[K]={target:e,kind:r,index:0},t}const J=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==J)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[K];const r=e.target,t=e.kind,o=e.index,s=W(r,t);return o>=s.length?{value:void 0,done:!0}:(this[K].index=o+1,{value:s[o],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(J,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const Q=Symbol("Response internals"),Z=E.STATUS_CODES;class Y{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};F.call(this,e,r);const t=r.status||200,o=new z(r.headers);if(null!=e&&!o.has("Content-Type")){const r=q(e);r&&o.append("Content-Type",r)}this[Q]={url:r.url,status:t,statusText:r.statusText||Z[t],headers:o,counter:r.counter}}get url(){return this[Q].url||""}get status(){return this[Q].status}get ok(){return this[Q].status>=200&&this[Q].status<300}get redirected(){return this[Q].counter>0}get statusText(){return this[Q].statusText}get headers(){return this[Q].headers}clone(){return new Y(L(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}F.mixIn(Y.prototype),Object.defineProperties(Y.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Y.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const X=Symbol("Request internals"),ee=y.parse,re=y.format,te="destroy"in w.Readable.prototype;function oe(e){return"object"==typeof e&&"object"==typeof e[X]}class se{constructor(e){let r,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};oe(e)?r=ee(e.url):(r=e&&e.href?ee(e.href):ee(`${e}`),e={});let o=t.method||e.method||"GET";if(o=o.toUpperCase(),(null!=t.body||oe(e)&&null!==e.body)&&("GET"===o||"HEAD"===o))throw new TypeError("Request with GET/HEAD method cannot have body");let s=null!=t.body?t.body:oe(e)&&null!==e.body?L(e):null;F.call(this,s,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const n=new z(t.headers||e.headers||{});if(null!=s&&!n.has("Content-Type")){const e=q(s);e&&n.append("Content-Type",e)}let i=oe(e)?e.signal:null;if("signal"in t&&(i=t.signal),null!=i&&!function(e){const r=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!r||"AbortSignal"!==r.constructor.name)}(i))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[X]={method:o,redirect:t.redirect||e.redirect||"follow",headers:n,parsedURL:r,signal:i},this.follow=void 0!==t.follow?t.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==t.compress?t.compress:void 0===e.compress||e.compress,this.counter=t.counter||e.counter||0,this.agent=t.agent||e.agent}get method(){return this[X].method}get url(){return re(this[X].parsedURL)}get headers(){return this[X].headers}get redirect(){return this[X].redirect}get signal(){return this[X].signal}clone(){return new se(this)}}function ne(e){const r=e[X].parsedURL,t=new z(e[X].headers);if(t.has("Accept")||t.set("Accept","*/*"),!r.protocol||!r.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(r.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof w.Readable&&!te)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let o=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(o="0"),null!=e.body){const r=x(e);"number"==typeof r&&(o=String(r))}o&&t.set("Content-Length",o),t.has("User-Agent")||t.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!t.has("Accept-Encoding")&&t.set("Accept-Encoding","gzip,deflate");let s=e.agent;return"function"==typeof s&&(s=s(r)),t.has("Connection")||s||t.set("Connection","close"),Object.assign({},r,{method:e.method,headers:function(e){const r=Object.assign({__proto__:null},e[N]),t=M(e[N],"Host");return void 0!==t&&(r[t]=r[t][0]),r}(t),agent:s})}function ie(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}F.mixIn(se.prototype),Object.defineProperty(se.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(se.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),ie.prototype=Object.create(Error.prototype),ie.prototype.constructor=ie,ie.prototype.name="AbortError";const ae=w.PassThrough,ce=y.resolve;function ue(e,r){if(!ue.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return F.Promise=ue.Promise,new ue.Promise(function(t,o){const s=new se(e,r),n=ne(s),i=("https:"===n.protocol?v:E).request,a=s.signal;let c=null;const u=function(){let e=new ie("The user aborted a request.");o(e),s.body&&s.body instanceof w.Readable&&s.body.destroy(e),c&&c.body&&c.body.emit("error",e)};if(a&&a.aborted)return void u();const l=function(){u(),m()},p=i(n);let d;function m(){p.abort(),a&&a.removeEventListener("abort",l),clearTimeout(d)}a&&a.addEventListener("abort",l),s.timeout&&p.once("socket",function(e){d=setTimeout(function(){o(new O(`network timeout at: ${s.url}`,"request-timeout")),m()},s.timeout)}),p.on("error",function(e){o(new O(`request to ${s.url} failed, reason: ${e.message}`,"system",e)),m()}),p.on("response",function(e){clearTimeout(d);const r=function(e){const r=new z;for(const t of Object.keys(e))if(!B.test(t))if(Array.isArray(e[t]))for(const o of e[t])I.test(o)||(void 0===r[N][t]?r[N][t]=[o]:r[N][t].push(o));else I.test(e[t])||(r[N][t]=[e[t]]);return r}(e.headers);if(ue.isRedirect(e.statusCode)){const n=r.get("Location"),i=null===n?null:ce(s.url,n);switch(s.redirect){case"error":return o(new O(`redirect mode is set to error: ${s.url}`,"no-redirect")),void m();case"manual":if(null!==i)try{r.set("Location",i)}catch(e){o(e)}break;case"follow":if(null===i)break;if(s.counter>=s.follow)return o(new O(`maximum redirect reached at: ${s.url}`,"max-redirect")),void m();const n={headers:new z(s.headers),follow:s.follow,counter:s.counter+1,agent:s.agent,compress:s.compress,method:s.method,body:s.body,signal:s.signal,timeout:s.timeout};return 303!==e.statusCode&&s.body&&null===x(s)?(o(new O("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void m()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==s.method)||(n.method="GET",n.body=void 0,n.headers.delete("content-length")),t(ue(new se(i,n))),void m())}}e.once("end",function(){a&&a.removeEventListener("abort",l)});let n=e.pipe(new ae);const i={url:s.url,status:e.statusCode,statusText:e.statusMessage,headers:r,size:s.size,timeout:s.timeout,counter:s.counter},u=r.get("Content-Encoding");if(!s.compress||"HEAD"===s.method||null===u||204===e.statusCode||304===e.statusCode)return c=new Y(n,i),void t(c);const p={flush:_.Z_SYNC_FLUSH,finishFlush:_.Z_SYNC_FLUSH};if("gzip"==u||"x-gzip"==u)return n=n.pipe(_.createGunzip(p)),c=new Y(n,i),void t(c);if("deflate"!=u&&"x-deflate"!=u){if("br"==u&&"function"==typeof _.createBrotliDecompress)return n=n.pipe(_.createBrotliDecompress()),c=new Y(n,i),void t(c);c=new Y(n,i),t(c)}else{e.pipe(new ae).once("data",function(e){n=8==(15&e[0])?n.pipe(_.createInflate()):n.pipe(_.createInflateRaw()),c=new Y(n,i),t(c)})}}),function(e,r){const t=r.body;null===t?e.end():D(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}(p,s)})}ue.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},ue.Promise=global.Promise;var le=ue;class pe extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var de=t(11);const me=t.n(de)()(e=>console.warn(e));class ge extends Error{constructor(e,r,t){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,Object.defineProperty(this,"code",{get:()=>(me(new pe("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),this.headers=t.headers||{};const o=Object.assign({},t.request);t.request.headers.authorization&&(o.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}}function he(e){(i(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,t,o={};return(e.request&&e.request.fetch||le)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(s=>{t=s.url,r=s.status;for(const e of s.headers)o[e[0]]=e[1];if(204===r||205===r)return;if("HEAD"===e.method){if(r<400)return;throw new ge(s.statusText,r,{headers:o,request:e})}if(304===r)throw new ge("Not modified",r,{headers:o,request:e});if(r>=400)return s.text().then(t=>{const s=new ge(t,r,{headers:o,request:e});try{let e=JSON.parse(s.message);Object.assign(s,e);let r=e.errors;s.message=s.message+": "+r.map(JSON.stringify).join(", ")}catch(e){}throw s});const n=s.headers.get("content-type");return/application\/json/.test(n)?s.json():!n||/^text\/|charset=utf-8$/.test(n)?s.text():function(e){return e.arrayBuffer()}(s)}).then(e=>({status:r,url:t,headers:o,data:e})).catch(r=>{if(r instanceof ge)throw r;throw new ge(r.message,500,{headers:o,request:e})})}const fe=function e(r,t){const o=r.defaults(t);return Object.assign(function(r,t){const s=o.merge(r,t);if(!s.request||!s.request.hook)return he(o.parse(s));const n=(e,r)=>he(o.parse(o.merge(e,r)));return Object.assign(n,{endpoint:o,defaults:e.bind(null,o)}),s.request.hook(n,s)},{endpoint:o,defaults:e.bind(null,o)})}(b,{headers:{"user-agent":`octokit-request.js/5.4.2 ${o()}`}});class Te extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const be=["method","baseUrl","url","headers","request","query","mediaType"];function we(e,r){const t=e.defaults(r);return Object.assign((e,r)=>(function(e,r,t){t=t="string"==typeof r?Object.assign({query:r},t):r;const o=Object.keys(t).reduce((e,r)=>be.includes(r)?(e[r]=t[r],e):(e.variables||(e.variables={}),e.variables[r]=t[r],e),{});return e(o).then(e=>{if(e.data.errors)throw new Te(o,{data:e.data});return e.data.data})})(t,e,r),{defaults:we.bind(null,t),endpoint:fe.endpoint})}we(fe,{headers:{"user-agent":`octokit-graphql.js/4.4.0 ${o()}`},method:"POST",url:"/graphql"});const Ee=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(async function(e){return{type:"token",token:e,tokenType:3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth"}}.bind(null,e),{hook:async function(e,r,t,o){const s=r.endpoint.merge(t,o);return s.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),r(s)}.bind(null,e)})},ye="2.5.0";class ve{constructor(e={}){const r=new s.Collection,t={baseUrl:fe.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(t.headers["user-agent"]=[e.userAgent,`octokit-core.js/${ye} ${o()}`].filter(Boolean).join(" "),e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=fe.defaults(t),this.graphql=function(e){return we(e,{method:"POST",url:"/graphql"})}(this.request).defaults(t),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=r,e.authStrategy){const t=e.authStrategy(Object.assign({request:this.request},e.auth));r.wrap("request",t.hook),this.auth=t}else if(e.auth){const t=Ee(e.auth);r.wrap("request",t.hook),this.auth=t}else this.auth=(async()=>({type:"unauthenticated"}));this.constructor.plugins.forEach(r=>{Object.assign(this,r(this,e))})}static defaults(e){return class extends(this){constructor(...r){const t=r[0]||{};super(Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null))}}}static plugin(e,...r){var t;e instanceof Array&&console.warn(["Passing an array of plugins to Octokit.plugin() has been deprecated.","Instead of:","  Octokit.plugin([plugin1, plugin2, ...])","Use:","  Octokit.plugin(plugin1, plugin2, ...)"].join("\n"));const o=this.plugins;let s=[...e instanceof Array?e:[e],...r];return(t=class extends(this){}).plugins=o.concat(s.filter(e=>!o.includes(e))),t}}ve.VERSION=ye,ve.plugins=[];function _e(e){e.hook.wrap("request",(r,t)=>{e.log.debug("request",t);const o=Date.now(),s=e.request.endpoint.parse(t),n=s.url.replace(t.baseUrl,"");return r(t).then(r=>(e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`),r)).catch(r=>{throw e.log.info(`${s.method} ${n} - ${r.status} in ${Date.now()-o}ms`),r})})}_e.VERSION="1.0.0";function ke(e){if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,t=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const s=Object.keys(e.data)[0],n=e.data[s];return e.data=n,void 0!==r&&(e.data.incomplete_results=r),void 0!==t&&(e.data.repository_selection=t),e.data.total_count=o,e}function Pe(e,r,t){const o="function"==typeof r?r.endpoint(t):e.request.endpoint(r,t),s="function"==typeof r?r:e.request,n=o.method,i=o.headers;let a=o.url;return{[Symbol.asyncIterator]:()=>({next:()=>a?s({method:n,url:a,headers:i}).then(ke).then(e=>(a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e})):Promise.resolve({done:!0})})}}function Se(e,r,t,o){return"function"==typeof t&&(o=t,t=void 0),function e(r,t,o,s){return o.next().then(n=>{if(n.done)return t;let i=!1;return t=t.concat(s?s(n.value,function(){i=!0}):n.value.data),i?t:e(r,t,o,s)})}(e,[],Pe(e,r,t)[Symbol.asyncIterator](),o)}function Ge(e){return{paginate:Object.assign(Se.bind(null,e),{iterator:Pe.bind(null,e)})}}Ge.VERSION="2.2.0";const Oe={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],createOrUpdateSecretForRepo:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","createOrUpdateRepoSecret"],renamedParameters:{name:"secret_name"}}],createRegistrationToken:["POST /repos/{owner}/{repo}/actions/runners/registration-token",{},{renamed:["actions","createRegistrationTokenForRepo"]}],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveToken:["POST /repos/{owner}/{repo}/actions/runners/remove-token",{},{renamed:["actions","createRemoveTokenForRepo"]}],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key",{},{renamed:["actions","getRepoPublicKey"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],getSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","getRepoSecret"],renamedParameters:{name:"secret_name"}}],getSelfHostedRunner:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}",{},{renamed:["actions","getSelfHostedRunnerForRepo"]}],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowJob:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listDownloadsForSelfHostedRunnerApplication:["GET /repos/{owner}/{repo}/actions/runners/downloads",{},{renamed:["actions","listRunnerApplicationsForRepo"]}],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflowRuns:["GET /repos/{owner}/{repo}/actions/runs"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSecretsForRepo:["GET /repos/{owner}/{repo}/actions/secrets",{},{renamed:["actions","listRepoSecrets"]}],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs",{},{renamed:["actions","downloadWorkflowJobLogs"]}],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs",{},{renamed:["actions","downloadWorkflowRunLogs"]}],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelfHostedRunner:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}",{},{renamed:["actions","deleteSelfHostedRunnerFromRepo"]}],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],checkStarringRepo:["GET /user/starred/{owner}/{repo}",{},{renamed:["activity","checkRepoIsStarredByAuthenticatedUser"]}],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscription:["PUT /notifications",{},{renamed:["activity","getThreadSubscriptionForAuthenticatedUser"]}],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listEventsForOrg:["GET /users/{username}/events/orgs/{org}",{},{renamed:["activity","listOrgEventsForAuthenticatedUser"]}],listEventsForUser:["GET /users/{username}/events",{},{renamed:["activity","listEventsForAuthenticatedUser"]}],listFeeds:["GET /feeds",{},{renamed:["activity","getFeeds"]}],listNotifications:["GET /notifications",{},{renamed:["activity","listNotificationsForAuthenticatedUser"]}],listNotificationsForAuthenticatedUser:["GET /notifications"],listNotificationsForRepo:["GET /repos/{owner}/{repo}/notifications",{},{renamed:["activity","listRepoNotificationsForAuthenticatedUser"]}],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForOrg:["GET /orgs/{org}/events",{},{renamed:["activity","listPublicOrgEvents"]}],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markAsRead:["PUT /notifications",{},{renamed:["activity","markNotificationsAsRead"]}],markNotificationsAsRead:["PUT /notifications"],markNotificationsAsReadForRepo:["PUT /repos/{owner}/{repo}/notifications",{},{renamed:["activity","markRepoNotificationsAsRead"]}],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepo:["PUT /user/starred/{owner}/{repo}",{},{renamed:["activity","starRepoForAuthenticatedUser"]}],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepo:["DELETE /user/starred/{owner}/{repo}",{},{renamed:["activity","unstarRepoForAuthenticatedUser"]}],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],checkAccountIsAssociatedWithAny:["GET /marketplace_listing/accounts/{account_id}",{},{renamed:["apps","getSubscriptionPlanForAccount"]}],checkAccountIsAssociatedWithAnyStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}",{},{renamed:["apps","getSubscriptionPlanForAccountStubbed"]}],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}}],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app",{mediaType:{previews:["machine-man"]}}],getBySlug:["GET /apps/{app_slug}",{mediaType:{previews:["machine-man"]}}],getInstallation:["GET /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],getOrgInstallation:["GET /orgs/{org}/installation",{mediaType:{previews:["machine-man"]}}],getRepoInstallation:["GET /repos/{owner}/{repo}/installation",{mediaType:{previews:["machine-man"]}}],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation",{mediaType:{previews:["machine-man"]}}],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listAccountsUserOrOrgOnPlan:["GET /marketplace_listing/plans/{plan_id}/accounts",{},{renamed:["apps","listAccountsForPlan"]}],listAccountsUserOrOrgOnPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",{},{renamed:["apps","listAccountsForPlanStubbed"]}],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories",{mediaType:{previews:["machine-man"]}}],listInstallations:["GET /app/installations",{mediaType:{previews:["machine-man"]}}],listInstallationsForAuthenticatedUser:["GET /user/installations",{mediaType:{previews:["machine-man"]}}],listMarketplacePurchasesForAuthenticatedUser:["GET /user/marketplace_purchases",{},{renamed:["apps","listSubscriptionsForAuthenticatedUser"]}],listMarketplacePurchasesForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed",{},{renamed:["apps","listSubscriptionsForAuthenticatedUserStubbed"]}],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listRepos:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}}],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],listConductCodes:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}},{renamed:["codesOfConduct","getAllCodesOfConduct"]}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listPublicForUser:["GET /users/{username}/gists",{},{renamed:["gists","listForUser"]}],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getTemplate:["GET /gitignore/templates/{name}"],listTemplates:["GET /gitignore/templates"]},interactions:{addOrUpdateRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],addOrUpdateRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkAssignee:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestonesForRepo:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","removeAllLabels"]}],replaceAllLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],replaceLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","replaceAllLabels"]}],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getForRepo:["GET /repos/{owner}/{repo}/license"],listCommonlyUsed:["GET /licenses"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportProgress:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addOrUpdateMembership:["PUT /orgs/{org}/memberships/{username}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembership:["GET /orgs/{org}/members/{username}"],checkPublicMembership:["GET /orgs/{org}/public_members/{username}"],concealMembership:["DELETE /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createHook:["POST /orgs/{org}/hooks"],createInvitation:["POST /orgs/{org}/invitations"],deleteHook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getHook:["GET /orgs/{org}/hooks/{hook_id}"],getMembership:["GET /orgs/{org}/memberships/{username}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],list:["GET /organizations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listHooks:["GET /orgs/{org}/hooks"],listInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}}],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMemberships:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],pingHook:["POST /orgs/{org}/hooks/{hook_id}/pings"],publicizeMembership:["PUT /orgs/{org}/public_members/{username}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembership:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateHook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateMembership:["PATCH /user/memberships/orgs/{org}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],reviewUserPermissionLevel:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewCommentReply:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReviewRequest:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],deleteComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewRequest:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],getCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listReviewRequests:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],delete:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{renamed:["reactions","deleteLegacy"]}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addDeployKey:["POST /repos/{owner}/{repo}/keys"],addProtectedBranchAdminEnforcement:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],addProtectedBranchAppRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addProtectedBranchRequiredSignatures:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],addProtectedBranchRequiredStatusChecksContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addProtectedBranchTeamRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addProtectedBranchUserRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createHook:["POST /repos/{owner}/{repo}/hooks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFile:["PUT /repos/{owner}/{repo}/contents/{path}"],createRelease:["POST /repos/{owner}/{repo}/releases"],createStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDownload:["DELETE /repos/{owner}/{repo}/downloads/{download_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteHook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disablePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enablePagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getArchiveLink:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getContents:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getDownload:["GET /repos/{owner}/{repo}/downloads/{download_id}"],getHook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getProtectedBranchAdminEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getProtectedBranchPullRequestReviewEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getProtectedBranchRequiredSignatures:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getProtectedBranchRequiredStatusChecks:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getProtectedBranchRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],list:["GET /user/repos",{},{renamed:["repos","listForAuthenticatedUser"]}],listAssetsForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitComments:["GET /repos/{owner}/{repo}/comments"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listDownloads:["GET /repos/{owner}/{repo}/downloads"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listHooks:["GET /repos/{owner}/{repo}/hooks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listProtectedBranchRequiredStatusChecksContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleases:["GET /repos/{owner}/{repo}/releases"],listStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}},{renamed:["repos","getAllTopics"]}],merge:["POST /repos/{owner}/{repo}/merges"],pingHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],removeProtectedBranchAdminEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],removeProtectedBranchAppRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeProtectedBranchPullRequestReviewEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],removeProtectedBranchRequiredSignatures:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],removeProtectedBranchRequiredStatusChecks:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeProtectedBranchRequiredStatusChecksContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeProtectedBranchRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],removeProtectedBranchTeamRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeProtectedBranchUserRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],replaceProtectedBranchAppRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],replaceProtectedBranchRequiredStatusChecksContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],replaceProtectedBranchTeamRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],replaceProtectedBranchUserRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}},{renamed:["repos","replaceAllTopics"]}],requestPageBuild:["POST /repos/{owner}/{repo}/pages/builds"],retrieveCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],testPushHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateHook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateProtectedBranchPullRequestReviewEnforcement:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateProtectedBranchRequiredStatusChecks:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},teams:{addOrUpdateMembershipInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkManagesRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],reviewProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmails:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowing:["GET /user/following/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],createGpgKey:["POST /user/gpg_keys"],createPublicKey:["POST /user/keys"],deleteEmails:["DELETE /user/emails"],deleteGpgKey:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicKey:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKey:["GET /user/gpg_keys/{gpg_key_id}"],getPublicKey:["GET /user/keys/{key_id}"],list:["GET /users"],listBlocked:["GET /user/blocks"],listEmails:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForAuthenticatedUser:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticated"]}],listFollowingForUser:["GET /users/{username}/following"],listGpgKeys:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmails:["GET /user/public_emails"],listPublicKeys:["GET /user/keys"],listPublicKeysForUser:["GET /users/{username}/keys"],togglePrimaryEmailVisibility:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function Re(e,r,t,o,s){const n=e.request.defaults(o);return Object.assign(function(...o){let i=n.endpoint.merge(...o);if(s.mapToData)return i=Object.assign({},i,{data:i[s.mapToData],[s.mapToData]:void 0}),n(i);if(s.renamed){const[o,n]=s.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${o}.${n}()`)}return s.deprecated&&e.log.warn(s.deprecated),n(...o)},n)}function Ae(e){return function(e,r){const t={};for(const[o,s]of Object.entries(r))for(const[r,n]of Object.entries(s)){const[s,i,a]=n,[c,u]=s.split(/ /),l=Object.assign({method:c,url:u},i);t[o]||(t[o]={});const p=t[o];p[r]=a?Re(e,o,r,l,a):e.request.defaults(l)}return t}(e,Oe)}Ae.VERSION="3.12.0",t.d(r,"Octokit",function(){return Ce});const Ce=ve.plugin(_e,Ae,Ge).defaults({userAgent:"octokit-rest.js/17.9.1"})}]));
//# sourceMappingURL=https://ticino.blob.core.windows.net/sourcemaps/cd9ea6488829f560dc949a8b2fb789f3cdc05f5d/extensions/github/dist/extension.js.map