!function(e,t){for(var r in t)e[r]=t[r]}(exports,function(e){var t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(o,s,function(t){return e[t]}.bind(null,s));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t){e.exports=require("stream")},function(e,t){e.exports=require("vscode")},function(e,t,r){"use strict";function o(){try{return navigator.userAgent}catch(e){return"<environment undetectable>"}}r.d(t,"a",(function(){return o}))},function(e,t){e.exports=require("zlib")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isSha=t.isDescendent=t.isChild=t.getRootUri=t.getRelativePath=t.activate=void 0;const o=r(1),s=r(16),n=r(19),i=r(20),a=r(21),c=r(10),u=r(27),l=r(30),p=/^(?:(?:https:\/\/)?github.com\/)?([^\/]+)\/([^\/]+?)(?:\/|.git|$)/i;function d(e,t){return 0===e.length||t.startsWith(e.endsWith("/")?e:e+"/")}t.activate=async function(e){const t=new n.ContextStore("codespace",c.GitHubFS.scheme,e.workspaceState),r=new s.ChangeStore(e.workspaceState),d=new a.GitHubApi(t),m=new c.GitHubFS(d),g=new i.VirtualFS("codespace",t,r,m);e.subscriptions.push(d,m,g,new u.VirtualSCM(c.GitHubFS.scheme,d,r),new l.StatusBar(t,r)),o.commands.registerCommand("githubBrowser.openRepository",async()=>{const e=await o.window.showInputBox({placeHolder:"e.g. https://github.com/microsoft/vscode",prompt:"Enter a GitHub repository url",validateInput:e=>p.test(e)?void 0:"Invalid repository url"});if(e){const t=p.exec(e);if(t){const[,e,r]=t;!function(e,t,r){if("addToCurrentWorkspace"===r){const r=o.workspace.workspaceFolders&&o.workspace.workspaceFolders.length||0;return o.workspace.updateWorkspaceFolders(r,0,{uri:e,name:t})}o.commands.executeCommand("vscode.openFolder",e,"newWindow"===r)}(o.Uri.parse(`codespace://HEAD/${e}/${r}`),r,"currentWindow")}}})},t.getRelativePath=function(e,t){return t.path.substr(e.path.length+1)},t.getRootUri=function(e){var t;return null===(t=o.workspace.getWorkspaceFolder(e))||void 0===t?void 0:t.uri},t.isChild=function(e,t){return d(e,t)&&1===t.substr(e.length+(e.endsWith("/")?0:1)).split("/").length},t.isDescendent=d;const m=/^[0-9a-f]{40}$/;t.isSha=function(e){return m.test(e)}},function(e,t,r){"use strict";
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
function o(e){return!0==(null!=(t=e)&&"object"==typeof t&&!1===Array.isArray(t))&&"[object Object]"===Object.prototype.toString.call(e);
/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
var t}r.d(t,"a",(function(){return k}));var s=function(e){var t,r;return!1!==o(e)&&("function"==typeof(t=e.constructor)&&(!1!==o(r=t.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf")))},n=r(2);function i(e,t,r){if("string"==typeof t){let[e,o]=t.split(" ");r=Object.assign(o?{method:e,url:o}:{url:e},r)}else r=Object.assign({},t);var o;r.headers=(o=r.headers)?Object.keys(o).reduce((e,t)=>(e[t.toLowerCase()]=o[t],e),{}):{};const n=function e(t,r){const o=Object.assign({},t);return Object.keys(r).forEach(n=>{s(r[n])?n in t?o[n]=e(t[n],r[n]):Object.assign(o,{[n]:r[n]}):Object.assign(o,{[n]:r[n]})}),o}(e||{},r);return e&&e.mediaType.previews.length&&(n.mediaType.previews=e.mediaType.previews.filter(e=>!n.mediaType.previews.includes(e)).concat(n.mediaType.previews)),n.mediaType.previews=n.mediaType.previews.map(e=>e.replace(/-preview/,"")),n}const a=/\{[^}]+\}/g;function c(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function u(e,t){return Object.keys(e).filter(e=>!t.includes(e)).reduce((t,r)=>(t[r]=e[r],t),{})}function l(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function p(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function d(e,t,r){return t="+"===e||"#"===e?l(t):p(t),r?p(r)+"="+t:t}function m(e){return null!=e}function g(e){return";"===e||"&"===e||"?"===e}function h(e,t){var r=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,o,s){if(o){let e="";const s=[];if(-1!==r.indexOf(o.charAt(0))&&(e=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach((function(r){var o=/([^:\*]*)(?::(\d+)|(\*))?/.exec(r);s.push(function(e,t,r,o){var s=e[r],n=[];if(m(s)&&""!==s)if("string"==typeof s||"number"==typeof s||"boolean"==typeof s)s=s.toString(),o&&"*"!==o&&(s=s.substring(0,parseInt(o,10))),n.push(d(t,s,g(t)?r:""));else if("*"===o)Array.isArray(s)?s.filter(m).forEach((function(e){n.push(d(t,e,g(t)?r:""))})):Object.keys(s).forEach((function(e){m(s[e])&&n.push(d(t,s[e],e))}));else{const e=[];Array.isArray(s)?s.filter(m).forEach((function(r){e.push(d(t,r))})):Object.keys(s).forEach((function(r){m(s[r])&&(e.push(p(r)),e.push(d(t,s[r].toString())))})),g(t)?n.push(p(r)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===t?m(s)&&n.push(p(r)):""!==s||"&"!==t&&"?"!==t?""===s&&n.push(""):n.push(p(r)+"=");return n}(t,e,o[1],o[2]||o[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==s.length?e:"")+s.join(n)}return s.join(",")}return l(s)}))}function f(e){let t,r=e.method.toUpperCase(),o=(e.url||"/").replace(/:([a-z]\w+)/g,"{+$1}"),s=Object.assign({},e.headers),n=u(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const t=e.match(a);return t?t.map(c).reduce((e,t)=>e.concat(t),[]):[]}(o);var l;o=(l=o,{expand:h.bind(null,l)}).expand(n),/^http/.test(o)||(o=e.baseUrl+o);const p=u(n,Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl"));if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,"application/vnd$1$2."+e.mediaType.format)).join(",")),e.mediaType.previews.length)){const t=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=t.concat(e.mediaType.previews).map(t=>`application/vnd.github.${t}-preview${e.mediaType.format?"."+e.mediaType.format:"+json"}`).join(",")}return["GET","HEAD"].includes(r)?o=function(e,t){const r=/\?/.test(e)?"&":"?",o=Object.keys(t);return 0===o.length?e:e+r+o.map(e=>"q"===e?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(t[e])}`).join("&")}(o,p):"data"in p?t=p.data:Object.keys(p).length?t=p:s["content-length"]=0,s["content-type"]||void 0===t||(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&void 0===t&&(t=""),Object.assign({method:r,url:o,headers:s},void 0!==t?{body:t}:null,e.request?{request:e.request}:null)}function w(e,t,r){return f(i(e,t,r))}const b=function e(t,r){const o=i(t,r),s=w.bind(null,o);return Object.assign(s,{DEFAULTS:o,defaults:e.bind(null,o),merge:i.bind(null,o),parse:f})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":"octokit-endpoint.js/6.0.3 "+Object(n.a)()},mediaType:{format:"",previews:[]}});var T=r(8);class y extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var v=r(14);const E=r.n(v)()(e=>console.warn(e));class _ extends Error{constructor(e,t,r){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t,Object.defineProperty(this,"code",{get:()=>(E(new y("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t)}),this.headers=r.headers||{};const o=Object.assign({},r.request);r.request.headers.authorization&&(o.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o}}function S(e){(s(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let t,r,o={};return(e.request&&e.request.fetch||T.default)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(s=>{r=s.url,t=s.status;for(const e of s.headers)o[e[0]]=e[1];if(204===t||205===t)return;if("HEAD"===e.method){if(t<400)return;throw new _(s.statusText,t,{headers:o,request:e})}if(304===t)throw new _("Not modified",t,{headers:o,request:e});if(t>=400)return s.text().then(r=>{const s=new _(r,t,{headers:o,request:e});try{let e=JSON.parse(s.message);Object.assign(s,e);let t=e.errors;s.message=s.message+": "+t.map(JSON.stringify).join(", ")}catch(e){}throw s});const n=s.headers.get("content-type");return/application\/json/.test(n)?s.json():!n||/^text\/|charset=utf-8$/.test(n)?s.text():function(e){return e.arrayBuffer()}(s)}).then(e=>({status:t,url:r,headers:o,data:e})).catch(t=>{if(t instanceof _)throw t;throw new _(t.message,500,{headers:o,request:e})})}const k=function e(t,r){const o=t.defaults(r);return Object.assign((function(t,r){const s=o.merge(t,r);if(!s.request||!s.request.hook)return S(o.parse(s));const n=(e,t)=>S(o.parse(o.merge(e,t)));return Object.assign(n,{endpoint:o,defaults:e.bind(null,o)}),s.request.hook(n,s)}),{endpoint:o,defaults:e.bind(null,o)})}(b,{headers:{"user-agent":"octokit-request.js/5.4.5 "+Object(n.a)()}})},function(e,t){e.exports=require("url")},function(e,t,r){"use strict";r.r(t),r.d(t,"graphql",(function(){return c})),r.d(t,"withCustomRequest",(function(){return u}));var o=r(5),s=r(2);class n extends Error{constructor(e,t){super(t.data.errors[0].message),Object.assign(this,t.data),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const i=["method","baseUrl","url","headers","request","query","mediaType"];function a(e,t){const r=e.defaults(t);return Object.assign((e,t)=>function(e,t,r){r=r="string"==typeof t?Object.assign({query:t},r):t;const o=Object.keys(r).reduce((e,t)=>i.includes(t)?(e[t]=r[t],e):(e.variables||(e.variables={}),e.variables[t]=r[t],e),{});return e(o).then(e=>{if(e.data.errors)throw new n(o,{data:e.data});return e.data.data})}(r,e,t),{defaults:a.bind(null,r),endpoint:o.a.endpoint})}const c=a(o.a,{headers:{"user-agent":"octokit-graphql.js/4.5.1 "+Object(s.a)()},method:"POST",url:"/graphql"});function u(e){return a(e,{method:"POST",url:"/graphql"})}},function(e,t,r){"use strict";r.r(t),r.d(t,"Headers",(function(){return G})),r.d(t,"Request",(function(){return W})),r.d(t,"Response",(function(){return L})),r.d(t,"FetchError",(function(){return d}));var o=r(0),s=r(9),n=r(6),i=r(13),a=r(3);const c=o.Readable,u=Symbol("buffer"),l=Symbol("type");class p{constructor(){this[l]="";const e=arguments[0],t=arguments[1],r=[];let o=0;if(e){const t=e,s=Number(t.length);for(let e=0;e<s;e++){const s=t[e];let n;n=s instanceof Buffer?s:ArrayBuffer.isView(s)?Buffer.from(s.buffer,s.byteOffset,s.byteLength):s instanceof ArrayBuffer?Buffer.from(s):s instanceof p?s[u]:Buffer.from("string"==typeof s?s:String(s)),o+=n.length,r.push(n)}}this[u]=Buffer.concat(r);let s=t&&void 0!==t.type&&String(t.type).toLowerCase();s&&!/[^\u0020-\u007E]/.test(s)&&(this[l]=s)}get size(){return this[u].length}get type(){return this[l]}text(){return Promise.resolve(this[u].toString())}arrayBuffer(){const e=this[u],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new c;return e._read=function(){},e.push(this[u]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],r=arguments[1];let o,s;o=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),s=void 0===r?e:r<0?Math.max(e+r,0):Math.min(r,e);const n=Math.max(s-o,0),i=this[u].slice(o,o+n),a=new p([],{type:arguments[2]});return a[u]=i,a}}function d(e,t,r){Error.call(this,e),this.message=e,this.type=t,r&&(this.code=this.errno=r.code),Error.captureStackTrace(this,this.constructor)}let m;Object.defineProperties(p.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(p.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),d.prototype=Object.create(Error.prototype),d.prototype.constructor=d,d.prototype.name="FetchError";try{m=require("encoding").convert}catch(e){}const g=Symbol("Body internals"),h=o.PassThrough;function f(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=r.size;let n=void 0===s?0:s;var i=r.timeout;let a=void 0===i?0:i;null==e?e=null:b(e)?e=Buffer.from(e.toString()):T(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof o||(e=Buffer.from(String(e)))),this[g]={body:e,disturbed:!1,error:null},this.size=n,this.timeout=a,e instanceof o&&e.on("error",(function(e){const r="AbortError"===e.name?e:new d(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[g].error=r}))}function w(){var e=this;if(this[g].disturbed)return f.Promise.reject(new TypeError("body used already for: "+this.url));if(this[g].disturbed=!0,this[g].error)return f.Promise.reject(this[g].error);let t=this.body;if(null===t)return f.Promise.resolve(Buffer.alloc(0));if(T(t)&&(t=t.stream()),Buffer.isBuffer(t))return f.Promise.resolve(t);if(!(t instanceof o))return f.Promise.resolve(Buffer.alloc(0));let r=[],s=0,n=!1;return new f.Promise((function(o,i){let a;e.timeout&&(a=setTimeout((function(){n=!0,i(new d(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(t){"AbortError"===t.name?(n=!0,i(t)):i(new d(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),t.on("data",(function(t){if(!n&&null!==t){if(e.size&&s+t.length>e.size)return n=!0,void i(new d(`content size at ${e.url} over limit: ${e.size}`,"max-size"));s+=t.length,r.push(t)}})),t.on("end",(function(){if(!n){clearTimeout(a);try{o(Buffer.concat(r,s))}catch(t){i(new d(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function b(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function T(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function y(e){let t,r,s=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return s instanceof o&&"function"!=typeof s.getBoundary&&(t=new h,r=new h,s.pipe(t),s.pipe(r),e[g].body=t,s=r),s}function v(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":b(e)?"application/x-www-form-urlencoded;charset=UTF-8":T(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?"multipart/form-data;boundary="+e.getBoundary():e instanceof o?null:"text/plain;charset=UTF-8"}function E(e){const t=e.body;return null===t?0:T(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}f.prototype={get body(){return this[g].body},get bodyUsed(){return this[g].disturbed},arrayBuffer(){return w.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return w.call(this).then((function(t){return Object.assign(new p([],{type:e.toLowerCase()}),{[u]:t})}))},json(){var e=this;return w.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return f.Promise.reject(new d(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return w.call(this).then((function(e){return e.toString()}))},buffer(){return w.call(this)},textConverted(){var e=this;return w.call(this).then((function(t){return function(e,t){if("function"!=typeof m)throw new Error("The package `encoding` must be installed to use the textConverted() function");const r=t.get("content-type");let o,s,n="utf-8";r&&(o=/charset=([^;]*)/i.exec(r));s=e.slice(0,1024).toString(),!o&&s&&(o=/<meta.+?charset=(['"])(.+?)\1/i.exec(s));!o&&s&&(o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(s),o&&(o=/charset=(.*)/i.exec(o.pop())));!o&&s&&(o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(s));o&&(n=o.pop(),"gb2312"!==n&&"gbk"!==n||(n="gb18030"));return m(e,"UTF-8",n).toString()}(t,e.headers)}))}},Object.defineProperties(f.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),f.mixIn=function(e){for(const t of Object.getOwnPropertyNames(f.prototype))if(!(t in e)){const r=Object.getOwnPropertyDescriptor(f.prototype,t);Object.defineProperty(e,t,r)}},f.Promise=global.Promise;const _=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,S=/[^\t\x20-\x7e\x80-\xff]/;function k(e){if(e=""+e,_.test(e)||""===e)throw new TypeError(e+" is not a legal HTTP header name")}function C(e){if(e=""+e,S.test(e))throw new TypeError(e+" is not a legal HTTP header value")}function P(e,t){t=t.toLowerCase();for(const r in e)if(r.toLowerCase()===t)return r}const O=Symbol("map");class G{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[O]=Object.create(null),e instanceof G){const t=e.raw(),r=Object.keys(t);for(const e of r)for(const r of t[e])this.append(e,r)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const r=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");r.push(Array.from(t))}for(const e of r){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const r=e[t];this.append(t,r)}}}}get(e){k(e=""+e);const t=P(this[O],e);return void 0===t?null:this[O][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,r=F(this),o=0;for(;o<r.length;){var s=r[o];const n=s[0],i=s[1];e.call(t,i,n,this),r=F(this),o++}}set(e,t){t=""+t,k(e=""+e),C(t);const r=P(this[O],e);this[O][void 0!==r?r:e]=[t]}append(e,t){t=""+t,k(e=""+e),C(t);const r=P(this[O],e);void 0!==r?this[O][r].push(t):this[O][e]=[t]}has(e){return k(e=""+e),void 0!==P(this[O],e)}delete(e){k(e=""+e);const t=P(this[O],e);void 0!==t&&delete this[O][t]}raw(){return this[O]}keys(){return x(this,"key")}values(){return x(this,"value")}[Symbol.iterator](){return x(this,"key+value")}}function F(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const r=Object.keys(e[O]).sort();return r.map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[O][t].join(", ")}:function(t){return[t.toLowerCase(),e[O][t].join(", ")]})}G.prototype.entries=G.prototype[Symbol.iterator],Object.defineProperty(G.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(G.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const R=Symbol("internal");function x(e,t){const r=Object.create(A);return r[R]={target:e,kind:t,index:0},r}const A=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==A)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[R];const t=e.target,r=e.kind,o=e.index,s=F(t,r);return o>=s.length?{value:void 0,done:!0}:(this[R].index=o+1,{value:s[o],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function j(e){const t=Object.assign({__proto__:null},e[O]),r=P(e[O],"Host");return void 0!==r&&(t[r]=t[r][0]),t}Object.defineProperty(A,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const D=Symbol("Response internals"),U=s.STATUS_CODES;class L{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};f.call(this,e,t);const r=t.status||200,o=new G(t.headers);if(null!=e&&!o.has("Content-Type")){const t=v(e);t&&o.append("Content-Type",t)}this[D]={url:t.url,status:r,statusText:t.statusText||U[r],headers:o,counter:t.counter}}get url(){return this[D].url||""}get status(){return this[D].status}get ok(){return this[D].status>=200&&this[D].status<300}get redirected(){return this[D].counter>0}get statusText(){return this[D].statusText}get headers(){return this[D].headers}clone(){return new L(y(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}f.mixIn(L.prototype),Object.defineProperties(L.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(L.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const q=Symbol("Request internals"),I=n.parse,B=n.format,H="destroy"in o.Readable.prototype;function $(e){return"object"==typeof e&&"object"==typeof e[q]}class W{constructor(e){let t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};$(e)?t=I(e.url):(t=e&&e.href?I(e.href):I(""+e),e={});let o=r.method||e.method||"GET";if(o=o.toUpperCase(),(null!=r.body||$(e)&&null!==e.body)&&("GET"===o||"HEAD"===o))throw new TypeError("Request with GET/HEAD method cannot have body");let s=null!=r.body?r.body:$(e)&&null!==e.body?y(e):null;f.call(this,s,{timeout:r.timeout||e.timeout||0,size:r.size||e.size||0});const n=new G(r.headers||e.headers||{});if(null!=s&&!n.has("Content-Type")){const e=v(s);e&&n.append("Content-Type",e)}let i=$(e)?e.signal:null;if("signal"in r&&(i=r.signal),null!=i&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(i))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[q]={method:o,redirect:r.redirect||e.redirect||"follow",headers:n,parsedURL:t,signal:i},this.follow=void 0!==r.follow?r.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==r.compress?r.compress:void 0===e.compress||e.compress,this.counter=r.counter||e.counter||0,this.agent=r.agent||e.agent}get method(){return this[q].method}get url(){return B(this[q].parsedURL)}get headers(){return this[q].headers}get redirect(){return this[q].redirect}get signal(){return this[q].signal}clone(){return new W(this)}}function M(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}f.mixIn(W.prototype),Object.defineProperty(W.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(W.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),M.prototype=Object.create(Error.prototype),M.prototype.constructor=M,M.prototype.name="AbortError";const N=o.PassThrough,z=n.resolve;function V(e,t){if(!V.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return f.Promise=V.Promise,new V.Promise((function(r,n){const c=new W(e,t),u=function(e){const t=e[q].parsedURL,r=new G(e[q].headers);if(r.has("Accept")||r.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof o.Readable&&!H)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let s=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(s="0"),null!=e.body){const t=E(e);"number"==typeof t&&(s=String(t))}s&&r.set("Content-Length",s),r.has("User-Agent")||r.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!r.has("Accept-Encoding")&&r.set("Accept-Encoding","gzip,deflate");let n=e.agent;return"function"==typeof n&&(n=n(t)),r.has("Connection")||n||r.set("Connection","close"),Object.assign({},t,{method:e.method,headers:j(r),agent:n})}(c),l=("https:"===u.protocol?i:s).request,p=c.signal;let m=null;const g=function(){let e=new M("The user aborted a request.");n(e),c.body&&c.body instanceof o.Readable&&c.body.destroy(e),m&&m.body&&m.body.emit("error",e)};if(p&&p.aborted)return void g();const h=function(){g(),b()},f=l(u);let w;function b(){f.abort(),p&&p.removeEventListener("abort",h),clearTimeout(w)}p&&p.addEventListener("abort",h),c.timeout&&f.once("socket",(function(e){w=setTimeout((function(){n(new d("network timeout at: "+c.url,"request-timeout")),b()}),c.timeout)})),f.on("error",(function(e){n(new d(`request to ${c.url} failed, reason: ${e.message}`,"system",e)),b()})),f.on("response",(function(e){clearTimeout(w);const t=function(e){const t=new G;for(const r of Object.keys(e))if(!_.test(r))if(Array.isArray(e[r]))for(const o of e[r])S.test(o)||(void 0===t[O][r]?t[O][r]=[o]:t[O][r].push(o));else S.test(e[r])||(t[O][r]=[e[r]]);return t}(e.headers);if(V.isRedirect(e.statusCode)){const o=t.get("Location"),s=null===o?null:z(c.url,o);switch(c.redirect){case"error":return n(new d("redirect mode is set to error: "+c.url,"no-redirect")),void b();case"manual":if(null!==s)try{t.set("Location",s)}catch(e){n(e)}break;case"follow":if(null===s)break;if(c.counter>=c.follow)return n(new d("maximum redirect reached at: "+c.url,"max-redirect")),void b();const o={headers:new G(c.headers),follow:c.follow,counter:c.counter+1,agent:c.agent,compress:c.compress,method:c.method,body:c.body,signal:c.signal,timeout:c.timeout};return 303!==e.statusCode&&c.body&&null===E(c)?(n(new d("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void b()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==c.method)||(o.method="GET",o.body=void 0,o.headers.delete("content-length")),r(V(new W(s,o))),void b())}}e.once("end",(function(){p&&p.removeEventListener("abort",h)}));let o=e.pipe(new N);const s={url:c.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:c.size,timeout:c.timeout,counter:c.counter},i=t.get("Content-Encoding");if(!c.compress||"HEAD"===c.method||null===i||204===e.statusCode||304===e.statusCode)return m=new L(o,s),void r(m);const u={flush:a.Z_SYNC_FLUSH,finishFlush:a.Z_SYNC_FLUSH};if("gzip"==i||"x-gzip"==i)return o=o.pipe(a.createGunzip(u)),m=new L(o,s),void r(m);if("deflate"!=i&&"x-deflate"!=i){if("br"==i&&"function"==typeof a.createBrotliDecompress)return o=o.pipe(a.createBrotliDecompress()),m=new L(o,s),void r(m);m=new L(o,s),r(m)}else{e.pipe(new N).once("data",(function(e){o=8==(15&e[0])?o.pipe(a.createInflate()):o.pipe(a.createInflateRaw()),m=new L(o,s),r(m)}))}})),function(e,t){const r=t.body;null===r?e.end():T(r)?r.stream().pipe(e):Buffer.isBuffer(r)?(e.write(r),e.end()):r.pipe(e)}(f,c)}))}V.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},V.Promise=global.Promise,t.default=V},function(e,t){e.exports=require("http")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fromGitHubUri=t.GitHubFS=void 0;const o=r(1),s=r(26),n=r(8),i=r(11),a=r(4),c={dispose:()=>{}},u=/(\/|\\)/g,l=new TextEncoder;class p{constructor(e){this.github=e,this._onDidChangeFile=new o.EventEmitter,this.fsCache=new Map,this.fileSearchCache=new Map,this.disposable=o.Disposable.from(o.workspace.registerFileSystemProvider(p.scheme,this,{isCaseSensitive:!0,isReadonly:!0}),o.workspace.registerFileSearchProvider(p.scheme,this),o.workspace.registerTextSearchProvider(p.scheme,this),e.onDidChangeContext(e=>this.fsCache.delete(e.toString())))}get onDidChangeFile(){return this._onDidChangeFile.event}dispose(){var e;null===(e=this.disposable)||void 0===e||e.dispose()}getCache(e){const t=a.getRootUri(e);if(void 0===t)return;let r=this.fsCache.get(t.toString());return void 0===r&&(r=new Map,this.fsCache.set(t.toString(),r)),r}watch(){return c}async stat(e){var t;if(""===e.path||0===e.path.lastIndexOf("/")){const t=await this.github.getContext(e);return{type:o.FileType.Directory,size:0,ctime:0,mtime:null==t?void 0:t.timestamp}}const r=await this.fsQuery(e,"__typename\n\t\t\t...on Blob {\n\t\t\t\tbyteSize\n\t\t\t}",this.getCache(e));if(void 0===r)throw o.FileSystemError.FileNotFound();const s=await this.github.getContext(e);return{type:d(r.__typename),size:null!==(t=r.byteSize)&&void 0!==t?t:0,ctime:0,mtime:null==s?void 0:s.timestamp}}async readDirectory(e){var t;const r=await this.fsQuery(e,"... on Tree {\n\t\t\t\tentries {\n\t\t\t\t\tname\n\t\t\t\t\ttype\n\t\t\t\t}\n\t\t\t}",this.getCache(e));return(null!==(t=null==r?void 0:r.entries)&&void 0!==t?t:[]).map(e=>[e.name,d(e.type)])}createDirectory(e){throw o.FileSystemError.NoPermissions()}async readFile(e){var t;const r=await this.fsQuery(e,"... on Blob {\n\t\t\t\toid,\n\t\t\t\tisBinary,\n\t\t\t\ttext\n\t\t\t}");if(null==r?void 0:r.isBinary){const{owner:t,repo:r,path:o}=m(e);return async function(e){const t=await n.default(e.toString());return new Uint8Array(await t.arrayBuffer())}(e.with({scheme:"https",authority:"raw.githubusercontent.com",path:`/${t}/${r}/HEAD/${o}`}))}return l.encode(null!==(t=null==r?void 0:r.text)&&void 0!==t?t:"")}async writeFile(e,t,r){throw o.FileSystemError.NoPermissions()}delete(e,t){throw o.FileSystemError.NoPermissions()}rename(e,t,r){throw o.FileSystemError.NoPermissions()}copy(e,t,r){throw o.FileSystemError.NoPermissions()}async provideFileSearchResults(e,t,r){let n=this.fileSearchCache.get(t.folder.toString(!0));if(void 0===n){const e=await this.github.filesQuery(t.folder);if(void 0===e||r.isCancellationRequested)return[];n=[...i.Iterables.map(e,e=>s.prepareSlow(e))],this.fileSearchCache.set(t.folder.toString(!0),n)}if(void 0===t.maxResults||0===t.maxResults||t.maxResults>=n.length){return n.map(e=>o.Uri.joinPath(t.folder,e.target))}const a=s.go(e.pattern.replace(u,"/"),n,{allowTypo:!0,limit:t.maxResults}).map(e=>o.Uri.joinPath(t.folder,e.target));return s.cleanup(),a}async provideTextSearchResults(e,t,r,s){const n=await this.github.searchQuery(e.pattern,t.folder,{maxResults:t.maxResults,context:{before:t.beforeContext,after:t.afterContext}});if(void 0===n)return{limitHit:!0};let i;for(const e of n.matches)i=o.Uri.joinPath(t.folder,e.path),r.report({uri:i,ranges:e.ranges,preview:{text:e.preview,matches:e.matches}});return{limitHit:!1}}async fsQuery(e,t,r){const o=`${e.toString()}:${function(e){let t,r=0;if(0===e.length)return r;const o=e.length;for(let s=0;s<o;s++)t=e.charCodeAt(s),r=(r<<5)-r+t,r|=0;return r}(t)}`;let s=null==r?void 0:r.get(o);return void 0!==s||(s=await this.github.fsQuery(e,t),null==r||r.set(o,s)),s}}function d(e){switch(e&&(e=e.toLocaleLowerCase()),e){case"blob":return o.FileType.File;case"tree":return o.FileType.Directory;default:return o.FileType.Unknown}}function m(e){const[,t,r,...o]=e.path.split("/");let s;return e.authority&&(s=e.authority,/HEAD/i.test(s)&&(s="HEAD")),{owner:t,repo:r,path:o.join("/"),ref:null!=s?s:"HEAD"}}t.GitHubFS=p,p.scheme="github",t.fromGitHubUri=m},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Iterables=void 0,function(e){e.filterMap=function*(e,t){for(const r of e){const e=t(r);null!=e&&(yield e)}},e.map=function*(e,t){for(const r of e)yield t(r)}}(t.Iterables||(t.Iterables={}))},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("https")},function(e,t,r){var o=r(22);function s(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function n(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}e.exports=o(s),e.exports.strict=o(n),s.proto=s((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return s(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})}))},function(e,t,r){var o=r(23),s=r(24),n=r(25),i=Function.bind,a=i.bind(i);function c(e,t,r){var o=a(n,null).apply(null,r?[t,r]:[t]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach((function(o){var n=r?[t,o,r]:[t,o];e[o]=e.api[o]=a(s,null).apply(null,n)}))}function u(){var e={registry:{}},t=o.bind(null,e);return c(t,e),t}var l=!1;function p(){return l||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),l=!0),u()}p.Singular=function(){var e={registry:{}},t=o.bind(null,e,"h");return c(t,e,"h"),t}.bind(),p.Collection=u.bind(),e.exports=p,e.exports.Hook=p,e.exports.Singular=p.Singular,e.exports.Collection=p.Collection},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ChangeStore=void 0;const o=r(1),s=r(4),n=r(17),i=new TextDecoder;function a(e,t,r){return{type:e.type,rootUri:t,uri:null!=r?r:"string"==typeof e.uri?o.Uri.parse(e.uri):e.uri}}t.ChangeStore=class{constructor(e){this.memento=e,this._onDidChange=new o.EventEmitter}get onDidChange(){return this._onDidChange.event}async acceptAll(e){const t=this.getChanges(e);await this.saveWorkingOperations(e,void 0);const r=[];for(const o of t)await this.discardWorkingContent(o.uri),r.push(a(o,e));for(const e of r)this._onDidChange.fire(e)}async discard(e){const t=s.getRootUri(e);if(void 0===t)return;const r=e.toString(),o=this.getWorkingOperations(t),n=o.findIndex(e=>e.uri===r);if(-1===n)return;const[i]=o.splice(n,1);await this.saveWorkingOperations(t,o),await this.discardWorkingContent(e),this._onDidChange.fire({type:"created"===i.type?"deleted":"deleted"===i.type?"created":"changed",rootUri:t,uri:e})}async discardAll(e){const t=this.getChanges(e);await this.saveWorkingOperations(e,void 0);const r=[];for(const o of t)await this.discardWorkingContent(o.uri),r.push(a(o,e));for(const e of r)this._onDidChange.fire(e)}getChanges(e){return this.getWorkingOperations(e).map(e=>{return t=e,{...t,uri:o.Uri.parse(t.uri)};var t})}getContent(e){return this.memento.get("github.working|"+e.toString())}getStat(e){var t;const r=e.toString(),n=this.getChanges(s.getRootUri(e)).find(e=>e.uri.toString()===r);if(void 0!==n)return{type:o.FileType.File,size:null!==(t=n.size)&&void 0!==t?t:0,ctime:0,mtime:n.timestamp}}hasChanges(e){return 0!==this.getWorkingOperations(e).length}updateDirectoryEntries(e,t){const r=s.getRootUri(e);if(void 0===r)return t;const n=s.getRelativePath(r,e),i=this.getChanges(r);for(const e of i)switch(e.type){case"changed":continue;case"created":{const i=s.getRelativePath(r,e.uri);s.isChild(n,i)&&t.push([i,o.FileType.File]);break}case"deleted":{const o=s.getRelativePath(r,e.uri);if(s.isChild(n,o)){const e=t.findIndex(([e])=>e===o);-1!==e&&t.splice(e,1)}break}}return t}async onFileChanged(e,t,r){const o=s.getRootUri(e);if(void 0===o)return;const c=e.toString(),u=this.getWorkingOperations(o),l=await n.sha1(t);let p=u.find(e=>e.uri===c);if(void 0===p){const s=await n.sha1(await r());if(l===s)return;p={type:"changed",size:t.byteLength,timestamp:Date.now(),uri:c,hash:l,originalHash:s},u.push(p),await this.saveWorkingOperations(o,u),await this.saveWorkingContent(e,i.decode(t))}else l===p.originalHash?(u.splice(u.indexOf(p),1),await this.saveWorkingOperations(o,u),await this.discardWorkingContent(e)):p.hash!==l&&(p.hash=l,p.timestamp=Date.now(),await this.saveWorkingOperations(o,u),await this.saveWorkingContent(e,i.decode(t)));this._onDidChange.fire(a(p,o,e))}async onFileCreated(e,t){const r=s.getRootUri(e);if(void 0===r)return;const o=e.toString(),c=this.getWorkingOperations(r),u=await n.sha1(t);let l=c.find(e=>e.uri===o);void 0===l?(l={type:"created",size:t.byteLength,timestamp:Date.now(),uri:o,hash:u,originalHash:u},c.push(l),await this.saveWorkingOperations(r,c),await this.saveWorkingContent(e,i.decode(t))):(l.hash=u,l.timestamp=Date.now(),await this.saveWorkingOperations(r,c),await this.saveWorkingContent(e,i.decode(t))),this._onDidChange.fire(a(l,r,e))}async onFileDeleted(e){const t=s.getRootUri(e);if(void 0===t)return;const r=e.toString(),o=this.getWorkingOperations(t);let n=o.find(e=>e.uri===r);void 0!==n&&o.splice(o.indexOf(n),1);const i="created"===(null==n?void 0:n.type);n={type:"deleted",timestamp:Date.now(),uri:r},i||o.push(n),await this.saveWorkingOperations(t,o),await this.discardWorkingContent(e),this._onDidChange.fire(a(n,t,e))}async openChanges(e,t){const r={preserveFocus:!1,preview:!0,viewColumn:o.ViewColumn.Active};await o.commands.executeCommand("vscode.diff",t,e,e.fsPath+" (Working Tree)",r)}async openFile(e){const t={preserveFocus:!1,preview:!1,viewColumn:o.ViewColumn.Active};await o.commands.executeCommand("vscode.open",e,t)}getWorkingOperations(e){return this.memento.get("github.working.changes|"+e.toString(),[])}async saveWorkingOperations(e,t){await this.memento.update("github.working.changes|"+e.toString(),t)}async saveWorkingContent(e,t){await this.memento.update("github.working|"+e.toString(),t)}async discardWorkingContent(e){await this.memento.update("github.working|"+e.toString(),void 0)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.sha1=void 0;const o=new TextDecoder,s=new TextEncoder;t.sha1=async function(e){for(;;)try{if(WEBWORKER){const t=await globalThis.crypto.subtle.digest({name:"sha-1"},"string"==typeof e?s.encode(e):e);return globalThis.btoa(encodeURIComponent(o.decode(t)))}return(await Promise.resolve().then(()=>r(18))).createHash("sha1").update(e).digest("base64")}catch(e){e instanceof ReferenceError&&(global.WEBWORKER=!1)}}},function(e,t){e.exports=require("crypto")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ContextStore=void 0;const o=r(1);t.ContextStore=class{constructor(e,t,r){this.scheme=e,this.originalScheme=t,this.memento=r,this._onDidChange=new o.EventEmitter}get onDidChange(){return this._onDidChange.event}delete(e){return this.set(e,void 0)}get(e){return this.memento.get(`${this.originalScheme}.context|${this.getOriginalResource(e).toString()}`)}getForWorkspace(){var e,t;return(null!==(t=null===(e=o.workspace.workspaceFolders)||void 0===e?void 0:e.filter(e=>e.uri.scheme===this.scheme||e.uri.scheme===this.originalScheme))&&void 0!==t?t:[]).map(e=>({context:this.get(e.uri),name:e.name,folderUri:e.uri})).filter(e=>void 0!==e.context)}async set(e,t){e=this.getOriginalResource(e),await this.memento.update(`${this.originalScheme}.context|${e.toString()}`,t),this._onDidChange.fire(e)}getOriginalResource(e){return e.with({scheme:this.originalScheme})}getWorkspaceResource(e){return e.with({scheme:this.scheme})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VirtualFS=void 0;const o=r(1),s={dispose:()=>{}},n=new TextEncoder;t.VirtualFS=class{constructor(e,t,r,s){this.scheme=e,this.contextStore=t,this.changeStore=r,this.fs=s,this._onDidChangeFile=new o.EventEmitter;for(const e of t.getForWorkspace())r.hasChanges(e.folderUri)||(console.log("Clear context",e.folderUri.toString()),t.delete(e.folderUri));this.disposable=o.Disposable.from(o.workspace.registerFileSystemProvider(e,this,{isCaseSensitive:!0}),o.workspace.registerFileSearchProvider(e,this),o.workspace.registerTextSearchProvider(e,this),r.onDidChange(e=>{switch(e.type){case"created":this._onDidChangeFile.fire([{type:o.FileChangeType.Created,uri:e.uri}]);break;case"changed":this._onDidChangeFile.fire([{type:o.FileChangeType.Changed,uri:e.uri}]);break;case"deleted":this._onDidChangeFile.fire([{type:o.FileChangeType.Deleted,uri:e.uri}])}}))}get onDidChangeFile(){return this._onDidChangeFile.event}dispose(){var e;null===(e=this.disposable)||void 0===e||e.dispose()}getOriginalResource(e){return this.contextStore.getOriginalResource(e)}getWorkspaceResource(e){return this.contextStore.getWorkspaceResource(e)}watch(){return s}async stat(e){let t=this.changeStore.getStat(e);return void 0!==t||(t=await this.fs.stat(this.getOriginalResource(e))),t}async readDirectory(e){let t=await this.fs.readDirectory(this.getOriginalResource(e));return t=this.changeStore.updateDirectoryEntries(e,t),t}createDirectory(e){throw o.FileSystemError.NoPermissions()}async readFile(e){const t=this.changeStore.getContent(e);if(void 0!==t)return n.encode(t);return await this.fs.readFile(this.getOriginalResource(e))}async writeFile(e,t,r){let s;try{if(s=await this.stat(e),!r.overwrite)throw o.FileSystemError.FileExists()}catch(e){if(!(e instanceof o.FileSystemError&&"FileNotFound"===e.code))throw e;if(!r.create)throw o.FileSystemError.FileNotFound()}void 0===s?await this.changeStore.onFileCreated(e,t):await this.changeStore.onFileChanged(e,t,()=>this.fs.readFile(this.getOriginalResource(e)))}async delete(e,t){if((await this.stat(e)).type!==o.FileType.File)throw o.FileSystemError.NoPermissions();await this.changeStore.onFileDeleted(e)}async rename(e,t,r){if((await this.stat(e)).type!==o.FileType.File)throw o.FileSystemError.NoPermissions();const s=await this.readFile(e);await this.writeFile(t,s,{create:!0,overwrite:r.overwrite}),await this.delete(e,{recursive:!1})}async copy(e,t,r){if((await this.stat(e)).type!==o.FileType.File)throw o.FileSystemError.NoPermissions();const s=await this.readFile(e);await this.writeFile(t,s,{create:!0,overwrite:r.overwrite})}provideFileSearchResults(e,t,r){return this.fs.provideFileSearchResults(e,{...t,folder:this.getOriginalResource(t.folder)},r)}provideTextSearchResults(e,t,r,o){return this.fs.provideTextSearchResults(e,{...t,folder:this.getOriginalResource(t.folder)},{report:e=>r.report({...e,uri:this.getWorkspaceResource(e.uri)})},o)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GitHubApi=void 0;const o=r(1),s=r(7),n=r(31),i=r(10),a=r(4),c=r(11);t.GitHubApi=class{constructor(e){this.context=e,this._onDidChangeContext=new o.EventEmitter,this.pendingContextRequests=new Map,this.rootUriToContextMap=new Map,this.disposable=o.Disposable.from(e.onDidChange(e=>this._onDidChangeContext.fire(e)))}get onDidChangeContext(){return this._onDidChangeContext.event}dispose(){this.disposable.dispose()}async ensureAuthenticated(){if(void 0===this._session){(await o.authentication.getProviderIds()).includes("github")||await new Promise(e=>{o.authentication.onDidChangeAuthenticationProviders(t=>{t.added.includes("github")&&e()})}),this._session=await o.authentication.getSession("github",["repo"],{createIfNone:!0})}return this._session}async graphql(){if(void 0===this._graphql){const e=await this.ensureAuthenticated();this._graphql=s.graphql.defaults({headers:{Authorization:"Bearer "+e.accessToken}})}return this._graphql}async octokit(e){if(void 0===this._octokit){const e=await this.ensureAuthenticated();this._octokit=n.Octokit.defaults({auth:"token "+e.accessToken})}return new this._octokit(e)}async commit(e,t,r){const{owner:o,repo:s}=i.fromGitHubUri(e);try{const n=await this.getContext(e);if(void 0===n.sha)throw new Error(`Cannot commit to Uri(${e.toString(!0)}); Invalid context sha`);const i=r.some(e=>"deleted"===e.type),a=await this.octokit(),c=await a.git.getTree({owner:o,repo:s,tree_sha:n.sha,recursive:i?"true":void 0});let u;if(i){u=c.data.tree;for(const e of r)switch(e.type){case"created":u.push({path:e.path,mode:"100644",type:"blob",content:e.content});break;case"changed":{const t=u.findIndex(t=>t.path===e.path);if(-1!==t){const{path:r,mode:o,type:s}=u[t];u.splice(t,1,{path:r,mode:o,type:s,content:e.content})}break}case"deleted":{const t=u.findIndex(t=>t.path===e.path);-1!==t&&u.splice(t,1);break}}}else{u=[];for(const e of r)switch(e.type){case"created":u.push({path:e.path,mode:"100644",type:"blob",content:e.content});break;case"changed":const t=c.data.tree.find(t=>t.path===e.path);if(void 0!==t){const{path:r,mode:o,type:s}=t;u.push({path:r,mode:o,type:s,content:e.content})}}}const l=await a.git.createTree({owner:o,repo:s,base_tree:i?void 0:c.data.sha,tree:u}),p=await a.git.createCommit({owner:o,repo:s,message:t,tree:l.data.sha,parents:[n.sha]});return this.updateContext(e,{...n,sha:p.data.sha,timestamp:Date.now()}),await a.git.updateRef({owner:o,repo:s,ref:"heads/"+n.branch,sha:p.data.sha}),p.data.sha}catch(e){throw console.log(e),e}}async defaultBranchQuery(e){var t,r,o;const{owner:s,repo:n}=i.fromGitHubUri(e);try{const e="query defaultBranch($owner: String!, $repo: String!) {\n\trepository(owner: $owner, name: $repo) {\n\t\tdefaultBranchRef {\n\t\t\tname\n\t\t}\n\t}\n}",i=await this.gqlQuery(e,{owner:s,repo:n});return null!==(o=null===(r=null===(t=null==i?void 0:i.repository)||void 0===t?void 0:t.defaultBranchRef)||void 0===r?void 0:r.name)&&void 0!==o?o:void 0}catch(e){return}}async filesQuery(e){var t;const{owner:r,repo:o,ref:s}=i.fromGitHubUri(e);try{const n=await this.getContext(e),i=await(await this.octokit()).git.getTree({owner:r,repo:o,recursive:"1",tree_sha:null!==(t=null==n?void 0:n.sha)&&void 0!==t?t:s});return c.Iterables.filterMap(i.data.tree,e=>"blob"===e.type?e.path:void 0)}catch(e){return[]}}async fsQuery(e,t){var r,o,s;const{owner:n,repo:a,path:c,ref:u}=i.fromGitHubUri(e);try{const i=await this.getContext(e),l=`query fs($owner: String!, $repo: String!, $path: String) {\n\trepository(owner: $owner, name: $repo) {\n\t\tobject(expression: $path) {\n\t\t\t${t}\n\t\t}\n\t}\n}`,p=await this.gqlQuery(l,{owner:n,repo:a,path:`${null!==(r=i.sha)&&void 0!==r?r:u}:${c}`});return null!==(s=null===(o=null==p?void 0:p.repository)||void 0===o?void 0:o.object)&&void 0!==s?s:void 0}catch(e){return}}async latestCommitQuery(e){var t,r,o,s,n,a;const{owner:c,repo:u,ref:l}=i.fromGitHubUri(e);try{if("HEAD"===l){const e="query latest($owner: String!, $repo: String!) {\n\trepository(owner: $owner, name: $repo) {\n\t\tdefaultBranchRef {\n\t\t\ttarget {\n\t\t\t\toid\n\t\t\t}\n\t\t}\n\t}\n}",s=await this.gqlQuery(e,{owner:c,repo:u});return null!==(o=null===(r=null===(t=null==s?void 0:s.repository)||void 0===t?void 0:t.defaultBranchRef)||void 0===r?void 0:r.target.oid)&&void 0!==o?o:void 0}const e="query latest($owner: String!, $repo: String!, $ref: String!) {\n\trepository(owner: $owner, name: $repo) {\n\t\tref(qualifiedName: $ref) {\n\t\t\ttarget {\n\t\t\t\toid\n\t\t\t}\n\t\t}\n\t}\n}",i=await this.gqlQuery(e,{owner:c,repo:u,ref:null!=l?l:"HEAD"});return null!==(a=null===(n=null===(s=null==i?void 0:i.repository)||void 0===s?void 0:s.ref)||void 0===n?void 0:n.target.oid)&&void 0!==a?a:void 0}catch(e){return}}async searchQuery(e,t,r){const{owner:s,repo:n,ref:a}=i.fromGitHubUri(t);if("HEAD"!==a)return{matches:[],limitHit:!0};try{const t=await(await this.octokit({request:{headers:{accept:"application/vnd.github.v3.text-match+json"}}})).search.code({q:`${e} repo:${s}/${n}`}),i=new o.Range(0,0,0,0),a=[];let c,u=0;for(const e of t.data.items)for(const t of e.text_matches){if(u++,void 0!==r.maxResults&&u>r.maxResults)return{matches:a,limitHit:!0};c={path:e.path,ranges:[],preview:t.fragment,matches:[]};for(const e of t.matches){let r=0,s=0,n=0;for(let o=0;o<e.indices[1];o++)o===e.indices[0]&&(s=n),"\n"===t.fragment[o]?(r++,n=0):n++;c.ranges.push(i),c.matches.push(new o.Range(r,s,r,n))}a.push(c)}return{matches:a,limitHit:!1}}catch(e){return{matches:[],limitHit:!0}}}async gqlQuery(e,t){return(await this.graphql())(e,t)}async getContext(e){const t=function(e){const t=e.path.indexOf("/",e.path.indexOf("/",1)+1);return e.with({path:e.path.substring(0,-1===t?void 0:t),query:""})}(e);let r=this.pendingContextRequests.get(t.toString());void 0===r&&(r=this.getContextCore(t),this.pendingContextRequests.set(t.toString(),r));try{return await r}finally{this.pendingContextRequests.delete(t.toString())}}async getContextCore(e){const t=e.toString();let r=this.rootUriToContextMap.get(t);if(void 0!==(null==r?void 0:r.sha))return r;if(r=this.context.get(e),void 0!==(null==r?void 0:r.sha))return this.rootUriToContextMap.set(t,r),r;const{ref:o}=i.fromGitHubUri(e);if(a.isSha(o))r={requestRef:o,branch:o,sha:o,timestamp:Date.now()};else{let t;if("HEAD"===o){if(t=await this.defaultBranchQuery(e),void 0===t)throw new Error(`Cannot get context for Uri(${e.toString(!0)}); unable to get default branch`)}else t=o;r={requestRef:o,branch:t,sha:await this.latestCommitQuery(e),timestamp:Date.now()}}return this.updateContext(e,r),r}updateContext(e,t){this.rootUriToContextMap.set(e.toString(),t),this.context.set(e,t)}}},function(e,t){e.exports=function e(t,r){if(t&&r)return e(t)(r);if("function"!=typeof t)throw new TypeError("need wrapper function");return Object.keys(t).forEach((function(e){o[e]=t[e]})),o;function o(){for(var e=new Array(arguments.length),r=0;r<e.length;r++)e[r]=arguments[r];var o=t.apply(this,e),s=e[e.length-1];return"function"==typeof o&&o!==s&&Object.keys(s).forEach((function(e){o[e]=s[e]})),o}}},function(e,t){e.exports=function e(t,r,o,s){if("function"!=typeof o)throw new Error("method for before hook must be a function");s||(s={});if(Array.isArray(r))return r.reverse().reduce((function(r,o){return e.bind(null,t,o,r,s)}),o)();return Promise.resolve().then((function(){return t.registry[r]?t.registry[r].reduce((function(e,t){return t.hook.bind(null,e,s)}),o)():o(s)}))}},function(e,t){e.exports=function(e,t,r,o){var s=o;e.registry[r]||(e.registry[r]=[]);"before"===t&&(o=function(e,t){return Promise.resolve().then(s.bind(null,t)).then(e.bind(null,t))});"after"===t&&(o=function(e,t){var r;return Promise.resolve().then(e.bind(null,t)).then((function(e){return s(r=e,t)})).then((function(){return r}))});"error"===t&&(o=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return s(e,t)}))});e.registry[r].push({hook:o,orig:s})}},function(e,t){e.exports=function(e,t,r){if(!e.registry[t])return;var o=e.registry[t].map((function(e){return e.orig})).indexOf(r);if(-1===o)return;e.registry[t].splice(o,1)}},function(e,t,r){var o,s,n;s=[],void 0===(n="function"==typeof(o=function(){var e="undefined"==typeof window,t=new Map,r=new Map,o=[];o.total=0;var s=[],n=[];function i(){t.clear(),r.clear(),s=[],n=[]}function a(e){for(var t=-9007199254740991,r=e.length-1;r>=0;--r){var o=e[r];if(null!==o){var s=o.score;s>t&&(t=s)}}return-9007199254740991===t?null:t}function c(e,t){var r=e[t];if(void 0!==r)return r;var o=t;Array.isArray(t)||(o=t.split("."));for(var s=o.length,n=-1;e&&++n<s;)e=e[o[n]];return e}function u(e){return"object"==typeof e}var l=function(){var e=[],t=0,r={};function o(){for(var r=0,o=e[r],s=1;s<t;){var n=s+1;r=s,n<t&&e[n].score<e[s].score&&(r=n),e[r-1>>1]=e[r],s=1+(r<<1)}for(var i=r-1>>1;r>0&&o.score<e[i].score;i=(r=i)-1>>1)e[r]=e[i];e[r]=o}return r.add=function(r){var o=t;e[t++]=r;for(var s=o-1>>1;o>0&&r.score<e[s].score;s=(o=s)-1>>1)e[o]=e[s];e[o]=r},r.poll=function(){if(0!==t){var r=e[0];return e[0]=e[--t],o(),r}},r.peek=function(r){if(0!==t)return e[0]},r.replaceTop=function(t){e[0]=t,o()},r},p=l();return function d(m){var g={single:function(e,t,r){return e?(u(e)||(e=g.getPreparedSearch(e)),t?(u(t)||(t=g.getPrepared(t)),((r&&void 0!==r.allowTypo?r.allowTypo:!m||void 0===m.allowTypo||m.allowTypo)?g.algorithm:g.algorithmNoTypo)(e,t,e[0])):null):null},go:function(e,t,r){if(!e)return o;var s=(e=g.prepareSearch(e))[0],n=r&&r.threshold||m&&m.threshold||-9007199254740991,i=r&&r.limit||m&&m.limit||9007199254740991,l=(r&&void 0!==r.allowTypo?r.allowTypo:!m||void 0===m.allowTypo||m.allowTypo)?g.algorithm:g.algorithmNoTypo,d=0,h=0,f=t.length;if(r&&r.keys)for(var w=r.scoreFn||a,b=r.keys,T=b.length,y=f-1;y>=0;--y){for(var v=t[y],E=new Array(T),_=T-1;_>=0;--_)(C=c(v,k=b[_]))?(u(C)||(C=g.getPrepared(C)),E[_]=l(e,C,s)):E[_]=null;E.obj=v;var S=w(E);null!==S&&(S<n||(E.score=S,d<i?(p.add(E),++d):(++h,S>p.peek().score&&p.replaceTop(E))))}else if(r&&r.key){var k=r.key;for(y=f-1;y>=0;--y)(C=c(v=t[y],k))&&(u(C)||(C=g.getPrepared(C)),null!==(P=l(e,C,s))&&(P.score<n||(P={target:P.target,_targetLowerCodes:null,_nextBeginningIndexes:null,score:P.score,indexes:P.indexes,obj:v},d<i?(p.add(P),++d):(++h,P.score>p.peek().score&&p.replaceTop(P)))))}else for(y=f-1;y>=0;--y){var C,P;(C=t[y])&&(u(C)||(C=g.getPrepared(C)),null!==(P=l(e,C,s))&&(P.score<n||(d<i?(p.add(P),++d):(++h,P.score>p.peek().score&&p.replaceTop(P)))))}if(0===d)return o;var O=new Array(d);for(y=d-1;y>=0;--y)O[y]=p.poll();return O.total=d+h,O},goAsync:function(t,r,s){var n=!1,i=new Promise((function(i,p){if(!t)return i(o);var d=(t=g.prepareSearch(t))[0],h=l(),f=r.length-1,w=s&&s.threshold||m&&m.threshold||-9007199254740991,b=s&&s.limit||m&&m.limit||9007199254740991,T=(s&&void 0!==s.allowTypo?s.allowTypo:!m||void 0===m.allowTypo||m.allowTypo)?g.algorithm:g.algorithmNoTypo,y=0,v=0;function E(){if(n)return p("canceled");var l=Date.now();if(s&&s.keys)for(var m=s.scoreFn||a,_=s.keys,S=_.length;f>=0;--f){for(var k=r[f],C=new Array(S),P=S-1;P>=0;--P)(F=c(k,G=_[P]))?(u(F)||(F=g.getPrepared(F)),C[P]=T(t,F,d)):C[P]=null;C.obj=k;var O=m(C);if(null!==O&&!(O<w)&&(C.score=O,y<b?(h.add(C),++y):(++v,O>h.peek().score&&h.replaceTop(C)),f%1e3==0&&Date.now()-l>=10))return void(e?setImmediate(E):setTimeout(E))}else if(s&&s.key){for(var G=s.key;f>=0;--f)if((F=c(k=r[f],G))&&(u(F)||(F=g.getPrepared(F)),null!==(R=T(t,F,d))&&!(R.score<w)&&(R={target:R.target,_targetLowerCodes:null,_nextBeginningIndexes:null,score:R.score,indexes:R.indexes,obj:k},y<b?(h.add(R),++y):(++v,R.score>h.peek().score&&h.replaceTop(R)),f%1e3==0&&Date.now()-l>=10)))return void(e?setImmediate(E):setTimeout(E))}else for(;f>=0;--f){var F,R;if((F=r[f])&&(u(F)||(F=g.getPrepared(F)),null!==(R=T(t,F,d))&&!(R.score<w)&&(y<b?(h.add(R),++y):(++v,R.score>h.peek().score&&h.replaceTop(R)),f%1e3==0&&Date.now()-l>=10)))return void(e?setImmediate(E):setTimeout(E))}if(0===y)return i(o);for(var x=new Array(y),A=y-1;A>=0;--A)x[A]=h.poll();x.total=y+v,i(x)}e?setImmediate(E):E()}));return i.cancel=function(){n=!0},i},highlight:function(e,t,r){if(null===e)return null;void 0===t&&(t="<b>"),void 0===r&&(r="</b>");for(var o="",s=0,n=!1,i=e.target,a=i.length,c=e.indexes,u=0;u<a;++u){var l=i[u];if(c[s]===u){if(n||(n=!0,o+=t),++s===c.length){o+=l+r+i.substr(u+1);break}}else n&&(n=!1,o+=r);o+=l}return o},prepare:function(e){if(e)return{target:e,_targetLowerCodes:g.prepareLowerCodes(e),_nextBeginningIndexes:null,score:null,indexes:null,obj:null}},prepareSlow:function(e){if(e)return{target:e,_targetLowerCodes:g.prepareLowerCodes(e),_nextBeginningIndexes:g.prepareNextBeginningIndexes(e),score:null,indexes:null,obj:null}},prepareSearch:function(e){if(e)return g.prepareLowerCodes(e)},getPrepared:function(e){if(e.length>999)return g.prepare(e);var r=t.get(e);return void 0!==r||(r=g.prepare(e),t.set(e,r)),r},getPreparedSearch:function(e){if(e.length>999)return g.prepareSearch(e);var t=r.get(e);return void 0!==t||(t=g.prepareSearch(e),r.set(e,t)),t},algorithm:function(e,t,r){for(var o=t._targetLowerCodes,i=e.length,a=o.length,c=0,u=0,l=0,p=0;;){if(r===o[u]){if(s[p++]=u,++c===i)break;r=e[0===l?c:l===c?c+1:l===c-1?c-1:c]}if(++u>=a)for(;;){if(c<=1)return null;if(0===l){if(r===e[--c])continue;l=c}else{if(1===l)return null;if((r=e[1+(c=--l)])===e[c])continue}u=s[(p=c)-1]+1;break}}c=0;var d=0,m=!1,h=0,f=t._nextBeginningIndexes;null===f&&(f=t._nextBeginningIndexes=g.prepareNextBeginningIndexes(t.target));var w=u=0===s[0]?0:f[s[0]-1];if(u!==a)for(;;)if(u>=a){if(c<=0){if(++d>i-2)break;if(e[d]===e[d+1])continue;u=w;continue}--c,u=f[n[--h]]}else if(e[0===d?c:d===c?c+1:d===c-1?c-1:c]===o[u]){if(n[h++]=u,++c===i){m=!0;break}++u}else u=f[u];if(m)var b=n,T=h;else b=s,T=p;for(var y=0,v=-1,E=0;E<i;++E)v!==(u=b[E])-1&&(y-=u),v=u;for(m?0!==d&&(y+=-20):(y*=1e3,0!==l&&(y+=-20)),y-=a-i,t.score=y,t.indexes=new Array(T),E=T-1;E>=0;--E)t.indexes[E]=b[E];return t},algorithmNoTypo:function(e,t,r){for(var o=t._targetLowerCodes,i=e.length,a=o.length,c=0,u=0,l=0;;){if(r===o[u]){if(s[l++]=u,++c===i)break;r=e[c]}if(++u>=a)return null}c=0;var p=!1,d=0,m=t._nextBeginningIndexes;if(null===m&&(m=t._nextBeginningIndexes=g.prepareNextBeginningIndexes(t.target)),(u=0===s[0]?0:m[s[0]-1])!==a)for(;;)if(u>=a){if(c<=0)break;--c,u=m[n[--d]]}else if(e[c]===o[u]){if(n[d++]=u,++c===i){p=!0;break}++u}else u=m[u];if(p)var h=n,f=d;else h=s,f=l;for(var w=0,b=-1,T=0;T<i;++T)b!==(u=h[T])-1&&(w-=u),b=u;for(p||(w*=1e3),w-=a-i,t.score=w,t.indexes=new Array(f),T=f-1;T>=0;--T)t.indexes[T]=h[T];return t},prepareLowerCodes:function(e){for(var t=e.length,r=[],o=e.toLowerCase(),s=0;s<t;++s)r[s]=o.charCodeAt(s);return r},prepareBeginningIndexes:function(e){for(var t=e.length,r=[],o=0,s=!1,n=!1,i=0;i<t;++i){var a=e.charCodeAt(i),c=a>=65&&a<=90,u=c||a>=97&&a<=122||a>=48&&a<=57,l=c&&!s||!n||!u;s=c,n=u,l&&(r[o++]=i)}return r},prepareNextBeginningIndexes:function(e){for(var t=e.length,r=g.prepareBeginningIndexes(e),o=[],s=r[0],n=0,i=0;i<t;++i)s>i?o[i]=s:(s=r[++n],o[i]=void 0===s?t:s);return o},cleanup:i,new:d};return g}()})?o.apply(t,s):o)||(e.exports=n)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.VirtualSCM=void 0;const o=r(1),s=r(28),n=r(4),i=s.loadMessageBundle(r(12).join(__dirname,"scm.ts"));t.VirtualSCM=class{constructor(e,t,r){var s;this.originalScheme=e,this.github=t,this.changeStore=r,this.providers=[],this.registerCommands();for(const e of null!==(s=o.workspace.workspaceFolders)&&void 0!==s?s:[]){this.createScmProvider(e.uri,e.name);for(const t of r.getChanges(e.uri))this.update(e.uri,t.uri)}this.disposable=o.Disposable.from(r.onDidChange(e=>this.update(e.rootUri,e.uri)))}dispose(){this.disposable.dispose()}registerCommands(){o.commands.registerCommand("githubBrowser.commit",e=>{void 0===e&&1===this.providers.length&&(e=this.providers[0].sourceControl),void 0!==e&&this.commitChanges(e)}),o.commands.registerCommand("githubBrowser.discardChanges",e=>this.discardChanges(e.resourceUri)),o.commands.registerCommand("githubBrowser.openChanges",e=>this.openChanges(e.resourceUri)),o.commands.registerCommand("githubBrowser.openFile",e=>this.openFile(e.resourceUri))}async commitChanges(e){const t=this.changeStore.getChanges(e.rootUri).map(t=>{const r=n.getRelativePath(e.rootUri,t.uri);switch(t.type){case"created":case"changed":return{type:t.type,path:r,content:this.changeStore.getContent(t.uri)};case"deleted":return{type:t.type,path:r}}});if(!t.length)return void o.window.showInformationMessage(i(0,null));const r=e.inputBox.value;if(r){void 0!==await this.github.commit(this.getOriginalResource(e.rootUri),r,t)&&(this.changeStore.acceptAll(e.rootUri),e.inputBox.value="")}}discardChanges(e){return this.changeStore.discard(e)}openChanges(e){return this.changeStore.openChanges(e,this.getOriginalResource(e))}openFile(e){return this.changeStore.openFile(e)}update(e,t){const r=o.workspace.getWorkspaceFolder(t);if(void 0===r)return;const s=this.createScmProvider(e,r.name);this.createChangesGroup(s).resourceStates=this.changeStore.getChanges(e).map(e=>{const t={decorations:{strikeThrough:"deleted"===e.type},resourceUri:e.uri,command:{command:"githubBrowser.openChanges",title:"Open Changes"}};return t.command.arguments=[t],t})}createScmProvider(e,t){let r=this.providers.find(t=>{var r;return(null===(r=t.sourceControl.rootUri)||void 0===r?void 0:r.toString())===e.toString()});if(void 0===r){const s=o.scm.createSourceControl("github",t,e);s.quickDiffProvider={provideOriginalResource:e=>this.getOriginalResource(e)},s.acceptInputCommand={command:"githubBrowser.commit",title:"Commit",arguments:[s]},s.inputBox.placeholder=`Message (Ctrl+Enter to commit '${t}')`,r={sourceControl:s,groups:[]},this.createChangesGroup(r),this.providers.push(r)}return r}createChangesGroup(e){let t=e.groups.find(e=>"github.changes"===e.id);return void 0===t&&(t=e.sourceControl.createResourceGroup("github.changes","Changes"),e.groups.push(t)),t}getOriginalResource(e,t){return e.with({scheme:this.originalScheme})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,s,n,i,a,c,u=r(12),l=r(29),p=Object.prototype.toString;function d(e){return void 0!==e}function m(e){return"[object Number]"===p.call(e)}function g(e){return"[object String]"===p.call(e)}function h(e){return JSON.parse(l.readFileSync(e,"utf8"))}function f(e,t){return c&&(e="［"+e.replace(/[aouei]/g,"$&$&")+"］"),0===t.length?e:e.replace(/\{(\d+)\}/g,(function(e,r){var o=r[0],s=t[o],n=e;return"string"==typeof s?n=s:"number"!=typeof s&&"boolean"!=typeof s&&null!=s||(n=String(s)),n}))}function w(e){return function(t,r){for(var o=[],s=2;s<arguments.length;s++)o[s-2]=arguments[s];return m(t)?t>=e.length?void console.error("Broken localize call found. Index out of bounds. Stacktrace is\n: "+new Error("").stack):f(e[t],o):g(r)?(console.warn("Message "+r+" didn't get externalized correctly."),f(r,o)):void console.error("Broken localize call found. Stacktrace is\n: "+new Error("").stack)}}function b(e,t){for(var r=[],o=2;o<arguments.length;o++)r[o-2]=arguments[o];return f(t,r)}function T(e,t){return i[e]=t,t}function y(e,t){var r,o,s,n=u.join(a.cacheRoot,e.id+"-"+e.hash+".json"),i=!1,c=!1;try{return r=JSON.parse(l.readFileSync(n,{encoding:"utf8",flag:"r"})),o=n,s=new Date,l.utimes(o,s,s,(function(){})),r}catch(e){if("ENOENT"===e.code)c=!0;else{if(!(e instanceof SyntaxError))throw e;console.log("Syntax error parsing message bundle: "+e.message+"."),l.unlink(n,(function(e){e&&console.error("Deleting corrupted bundle "+n+" failed.")})),i=!0}}if(!(r=function(e,t){var r=a.translationsConfig[e.id];if(r){var o=h(r).contents,s=h(u.join(t,"nls.metadata.json")),n=Object.create(null);for(var i in s){var c=s[i],l=o[e.outDir+"/"+i];if(l){for(var p=[],d=0;d<c.keys.length;d++){var m=c.keys[d],f=l[g(m)?m:m.key];void 0===f&&(f=c.messages[d]),p.push(f)}n[i]=p}else n[i]=c.messages}return n}}(e,t))||i)return r;if(c)try{l.writeFileSync(n,JSON.stringify(r),{encoding:"utf8",flag:"wx"})}catch(e){if("EEXIST"===e.code)return r;throw e}return r}function v(e){try{return function(e){var t=h(u.join(e,"nls.metadata.json")),r=Object.create(null);for(var o in t){var s=t[o];r[o]=s.messages}return r}(e)}catch(e){return void console.log("Generating default bundle from meta data failed.",e)}}function E(e,t){var r;if(!0===a.languagePackSupport&&void 0!==a.cacheRoot&&void 0!==a.languagePackId&&void 0!==a.translationsConfigFile&&void 0!==a.translationsConfig)try{r=y(e,t)}catch(e){console.log("Load or create bundle failed ",e)}if(!r){if(a.languagePackSupport)return v(t);var o=function(e){for(var t=a.language;t;){var r=u.join(e,"nls.bundle."+t+".json");if(l.existsSync(r))return r;var o=t.lastIndexOf("-");t=o>0?t.substring(0,o):void 0}if(void 0===t){r=u.join(e,"nls.bundle.json");if(l.existsSync(r))return r}}(t);if(o)try{return h(o)}catch(e){console.log("Loading in the box message bundle failed.",e)}r=v(t)}return r}function _(e){if(!e)return b;var t=u.extname(e);if(t&&(e=e.substr(0,e.length-t.length)),a.messageFormat===o.both||a.messageFormat===o.bundle){var r=function(e){for(var t,r=u.dirname(e);t=u.join(r,"nls.metadata.header.json"),!l.existsSync(t);){var o=u.dirname(r);if(o===r){t=void 0;break}r=o}return t}(e);if(r){var s=u.dirname(r),n=i[s];if(void 0===n)try{var p=JSON.parse(l.readFileSync(r,"utf8"));try{var m=E(p,s);n=T(s,m?{header:p,nlsBundle:m}:null)}catch(e){console.error("Failed to load nls bundle",e),n=T(s,null)}}catch(e){console.error("Failed to read header file",e),n=T(s,null)}if(n){var g=e.substr(s.length+1).replace(/\\/g,"/"),f=n.nlsBundle[g];return void 0===f?(console.error("Messages for file "+e+" not found. See console for details."),function(){return"Messages not found."}):w(f)}}}if(a.messageFormat===o.both||a.messageFormat===o.file)try{var y=h(function(e){var t;if(a.cacheLanguageResolution&&t)t=t;else{if(c||!a.language)t=".nls.json";else for(var r=a.language;r;){var o=".nls."+r+".json";if(l.existsSync(e+o)){t=o;break}var s=r.lastIndexOf("-");s>0?r=r.substring(0,s):(t=".nls.json",r=null)}a.cacheLanguageResolution&&(t=t)}return e+t}(e));return Array.isArray(y)?w(y):d(y.messages)&&d(y.keys)?w(y.messages):(console.error("String bundle '"+e+"' uses an unsupported format."),function(){return"File bundle has unsupported format. See console for details"})}catch(e){"ENOENT"!==e.code&&console.error("Failed to load single file bundle",e)}return console.error("Failed to load message bundle for file "+e),function(){return"Failed to load message bundle. See console for details."}}!function(e){e.file="file",e.bundle="bundle",e.both="both"}(o=t.MessageFormat||(t.MessageFormat={})),function(e){e.standalone="standalone",e.languagePack="languagePack"}(s=t.BundleFormat||(t.BundleFormat={})),function(e){e.is=function(e){var t=e;return t&&d(t.key)&&d(t.comment)}}(n||(n={})),function(){if(a={locale:void 0,language:void 0,languagePackSupport:!1,cacheLanguageResolution:!0,messageFormat:o.bundle},g(process.env.VSCODE_NLS_CONFIG))try{var e=JSON.parse(process.env.VSCODE_NLS_CONFIG),t=void 0;if(e.availableLanguages){var r=e.availableLanguages["*"];g(r)&&(t=r)}if(g(e.locale)&&(a.locale=e.locale.toLowerCase()),void 0===t?a.language=a.locale:"en"!==t&&(a.language=t),function(e){return!0===e||!1===e}(e._languagePackSupport)&&(a.languagePackSupport=e._languagePackSupport),g(e._cacheRoot)&&(a.cacheRoot=e._cacheRoot),g(e._languagePackId)&&(a.languagePackId=e._languagePackId),g(e._translationsConfigFile)){a.translationsConfigFile=e._translationsConfigFile;try{a.translationsConfig=h(a.translationsConfigFile)}catch(t){if(e._corruptedFile){var s=u.dirname(e._corruptedFile);l.exists(s,(function(t){t&&l.writeFile(e._corruptedFile,"corrupted","utf8",(function(e){console.error(e)}))}))}}}}catch(e){}c="pseudo"===a.locale,void 0,i=Object.create(null)}(),t.loadMessageBundle=_,t.config=function(e){return e&&(g(e.locale)&&(a.locale=e.locale.toLowerCase(),a.language=a.locale,void 0,i=Object.create(null)),void 0!==e.messageFormat&&(a.messageFormat=e.messageFormat),e.bundleFormat===s.standalone&&!0===a.languagePackSupport&&(a.languagePackSupport=!1)),c="pseudo"===a.locale,_}},function(e,t){e.exports=require("fs")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StatusBar=void 0;const o=r(1),s=r(4);t.StatusBar=class{constructor(e,t){this.contextStore=e,this.changeStore=t,this.items=new Map,this.disposable=o.Disposable.from(e.onDidChange(this.onContextsChanged,this),t.onDidChange(this.onChanged,this));for(const e of this.contextStore.getForWorkspace())this.createOrUpdateStatusBarItem(e)}dispose(){var e;null===(e=this.disposable)||void 0===e||e.dispose(),this.items.forEach(e=>e.dispose())}createOrUpdateStatusBarItem(e){var t;let r=this.items.get(e.folderUri.toString());void 0===r&&(r=o.window.createStatusBarItem({id:"githubBrowser.branch:"+e.folderUri.toString(),name:"GitHub Browser: "+e.name,alignment:o.StatusBarAlignment.Left,priority:1e3})),s.isSha(e.context.branch)?(r.text="$(git-commit) "+e.context.branch.substr(0,8),r.tooltip=`${e.name} • ${e.context.branch.substr(0,8)}`):(r.text="$(git-branch) "+e.context.branch,r.tooltip=`${e.name} • ${e.context.branch}${e.context.sha?" @ "+(null===(t=e.context.sha)||void 0===t?void 0:t.substr(0,8)):""}`);this.changeStore.hasChanges(e.folderUri)&&(r.text+="*"),r.show(),this.items.set(e.folderUri.toString(),r)}onContextsChanged(e){const t=o.workspace.getWorkspaceFolder(this.contextStore.getWorkspaceResource(e));if(void 0===t)return;const r=this.contextStore.get(e);void 0!==r&&this.createOrUpdateStatusBarItem({context:r,name:t.name,folderUri:t.uri})}onChanged(e){const t=this.items.get(e.rootUri.toString());if(void 0!==t){this.changeStore.hasChanges(e.rootUri)?t.text.endsWith("*")||(t.text+="*"):t.text.endsWith("*")&&(t.text=t.text.substr(0,t.text.length-1))}}}},function(e,t,r){"use strict";r.r(t),r.d(t,"Octokit",(function(){return b}));var o=r(2),s=r(15),n=r(5),i=r(7);async function a(e){const t=3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:t}}async function c(e,t,r,o){const s=t.endpoint.merge(r,o);return s.headers.authorization=function(e){return 3===e.split(/\./).length?"bearer "+e:"token "+e}(e),t(s)}class u{constructor(e={}){const t=new s.Collection,r={baseUrl:n.a.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(r.headers["user-agent"]=[e.userAgent,"octokit-core.js/3.1.0 "+Object(o.a)()].filter(Boolean).join(" "),e.baseUrl&&(r.baseUrl=e.baseUrl),e.previews&&(r.mediaType.previews=e.previews),e.timeZone&&(r.headers["time-zone"]=e.timeZone),this.request=n.a.defaults(r),this.graphql=Object(i.withCustomRequest)(this.request).defaults({...r,baseUrl:r.baseUrl.replace(/\/api\/v3$/,"/api")}),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=t,e.authStrategy){const r=e.authStrategy(Object.assign({request:this.request},e.auth));t.wrap("request",r.hook),this.auth=r}else if(e.auth){const r=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!=typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(a.bind(null,e),{hook:c.bind(null,e)})}(e.auth);t.wrap("request",r.hook),this.auth=r}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach(t=>{Object.assign(this,t(this,e))})}static defaults(e){return class extends(this){constructor(...t){const r=t[0]||{};super("function"!=typeof e?Object.assign({},e,r,r.userAgent&&e.userAgent?{userAgent:`${r.userAgent} ${e.userAgent}`}:null):e(r))}}}static plugin(...e){var t;const r=this.plugins;return(t=class extends(this){}).plugins=r.concat(e.filter(e=>!r.includes(e))),t}}u.VERSION="3.1.0",u.plugins=[];function l(e){e.hook.wrap("request",(t,r)=>{e.log.debug("request",r);const o=Date.now(),s=e.request.endpoint.parse(r),n=s.url.replace(r.baseUrl,"");return t(r).then(t=>(e.log.info(`${s.method} ${n} - ${t.status} in ${Date.now()-o}ms`),t)).catch(t=>{throw e.log.info(`${s.method} ${n} - ${t.status} in ${Date.now()-o}ms`),t})})}l.VERSION="1.0.0";function p(e){if(!("total_count"in e.data&&!("url"in e.data)))return e;const t=e.data.incomplete_results,r=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const s=Object.keys(e.data)[0],n=e.data[s];return e.data=n,void 0!==t&&(e.data.incomplete_results=t),void 0!==r&&(e.data.repository_selection=r),e.data.total_count=o,e}function d(e,t,r){const o="function"==typeof t?t.endpoint(r):e.request.endpoint(t,r),s="function"==typeof t?t:e.request,n=o.method,i=o.headers;let a=o.url;return{[Symbol.asyncIterator]:()=>({next:()=>a?s({method:n,url:a,headers:i}).then(p).then(e=>(a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e})):Promise.resolve({done:!0})})}}function m(e,t,r,o){return"function"==typeof r&&(o=r,r=void 0),function e(t,r,o,s){return o.next().then(n=>{if(n.done)return r;let i=!1;return r=r.concat(s?s(n.value,(function(){i=!0})):n.value.data),i?r:e(t,r,o,s)})}(e,[],d(e,t,r)[Symbol.asyncIterator](),o)}function g(e){return{paginate:Object.assign(m.bind(null,e),{iterator:d.bind(null,e)})}}g.VERSION="2.2.3";const h={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}}],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app",{mediaType:{previews:["machine-man"]}}],getBySlug:["GET /apps/{app_slug}",{mediaType:{previews:["machine-man"]}}],getInstallation:["GET /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],getOrgInstallation:["GET /orgs/{org}/installation",{mediaType:{previews:["machine-man"]}}],getRepoInstallation:["GET /repos/{owner}/{repo}/installation",{mediaType:{previews:["machine-man"]}}],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation",{mediaType:{previews:["machine-man"]}}],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories",{mediaType:{previews:["machine-man"]}}],listInstallations:["GET /app/installations",{mediaType:{previews:["machine-man"]}}],listInstallationsForAuthenticatedUser:["GET /user/installations",{mediaType:{previews:["machine-man"]}}],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}}],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}}],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function f(e,t,r,o,s){const n=e.request.defaults(o);return Object.assign((function(...o){let i=n.endpoint.merge(...o);if(s.mapToData)return i=Object.assign({},i,{data:i[s.mapToData],[s.mapToData]:void 0}),n(i);if(s.renamed){const[o,n]=s.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${o}.${n}()`)}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const i=n.endpoint.merge(...o);for(const[o,n]of Object.entries(s.renamedParameters))o in i&&(e.log.warn(`"${o}" parameter is deprecated for "octokit.${t}.${r}()". Use "${n}" instead`),n in i||(i[n]=i[o]),delete i[o]);return n(i)}return n(...o)}),n)}function w(e){return function(e,t){const r={};for(const[o,s]of Object.entries(t))for(const[t,n]of Object.entries(s)){const[s,i,a]=n,[c,u]=s.split(/ /),l=Object.assign({method:c,url:u},i);r[o]||(r[o]={});const p=r[o];a?p[t]=f(e,o,t,l,a):p[t]=e.request.defaults(l)}return r}(e,h)}w.VERSION="4.0.0";const b=u.plugin(l,w,g).defaults({userAgent:"octokit-rest.js/18.0.0"})}]));
//# sourceMappingURL=https://ticino.blob.core.windows.net/sourcemaps/d5e9aa0227e057a60c82568bf31c04730dc15dcd/extensions/github-browser/dist/extension.js.map